// Generated by CoffeeScript 1.6.3
(function() {
  window.Graphics = (function() {
    function Graphics() {
      this.stage = new Kinetic.Stage({
        container: 'container',
        width: window.innerWidth,
        height: window.innerHeight
      });
      this.layer = new Kinetic.Layer;
      this.addToStage(this.layer);
      this.offset_x = 0;
      this.offset_y = 0;
      this.layer_grid = new Kinetic.Layer;
      this.grid_spacing = 50;
      this.grid_minorspacing = 10;
      this.grid_colour = 'gray';
      this.grid_width = 1;
      this.grid_opacity = 0.4;
      this.grid_opacityminor = 0.25;
      this.grid_dash = [1, 1];
    }

    Graphics.prototype.addToStage = function(o) {
      return this.stage.add(o);
    };

    Graphics.prototype.addToTopLayer = function(o) {
      return this.layer.add(o);
    };

    Graphics.prototype.addToLayer = function(layer, o) {
      return layer.add(o);
    };

    Graphics.prototype.test = function() {
      var rect;
      rect = new Kinetic.Rect({
        x: 239,
        y: 75,
        width: 100,
        height: 50,
        fill: 'green',
        stroke: 'black',
        strokeWidth: 4
      });
      this.addToTopLayer(rect);
      return this.layer.draw();
    };

    Graphics.prototype.grid = function() {
      var line, points, x, y, _i, _j, _k, _l, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;
      this.addToStage(this.layer_grid);
      points = [];
      for (y = _i = 0, _ref = this.stage.getAttr('height'), _ref1 = this.grid_minorspacing; _ref1 > 0 ? _i <= _ref : _i >= _ref; y = _i += _ref1) {
        line = new Kinetic.Line({
          points: [0, y, this.stage.getAttr('width'), y],
          stroke: this.grid_colour,
          strokeWidth: this.grid_width,
          opacity: this.grid_opacityminor,
          dashArray: this.grid_dash
        });
        this.addToLayer(this.layer_grid, line);
      }
      for (y = _j = 0, _ref2 = this.stage.getAttr('height'), _ref3 = this.grid_spacing; _ref3 > 0 ? _j <= _ref2 : _j >= _ref2; y = _j += _ref3) {
        line = new Kinetic.Line({
          points: [0, y, this.stage.getAttr('width'), y],
          stroke: this.grid_colour,
          strokeWidth: this.grid_width,
          opacity: this.grid_opacity
        });
        this.addToLayer(this.layer_grid, line);
      }
      for (x = _k = 0, _ref4 = this.stage.getAttr('width'), _ref5 = this.grid_minorspacing; _ref5 > 0 ? _k <= _ref4 : _k >= _ref4; x = _k += _ref5) {
        line = new Kinetic.Line({
          points: [x, 0, x, this.stage.getAttr('height')],
          stroke: this.grid_colour,
          strokeWidth: this.grid_width,
          opacity: this.grid_opacityminor,
          dashArray: this.grid_dash
        });
        this.addToLayer(this.layer_grid, line);
      }
      for (x = _l = 0, _ref6 = this.stage.getAttr('width'), _ref7 = this.grid_spacing; _ref7 > 0 ? _l <= _ref6 : _l >= _ref6; x = _l += _ref7) {
        line = new Kinetic.Line({
          points: [x, 0, x, this.stage.getAttr('height')],
          stroke: this.grid_colour,
          strokeWidth: this.grid_width,
          opacity: this.grid_opacity
        });
        this.addToLayer(this.layer_grid, line);
      }
      return this.layer_grid.draw();
    };

    return Graphics;

  })();

}).call(this);
