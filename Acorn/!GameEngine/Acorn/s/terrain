	.file	"terrain.c"
	.text
	.align	2
	.global	get_colour
	.ascii	"get_colour\000"
	.align	2
	.word	4278190092
	.type	get_colour, %function
get_colour:
	@ args = 0, pretend = 0, frame = 0, outgoing = 12
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {fp, ip, lr, pc}
	sub	fp, ip, #4
	cmp	sp, sl
	bllt	__rt_stkovf_split_small
	fmsr	s11, r0
	fmsr	s15, r1	@ int
	fcmpezs	s11
	fsitod	d6, s15
	fmstat
	fldd	d7, .L16
	sub	sp, sp, #12
	fcmped	d6, d7
	blt	.L12
	fmstat
	mov	r3, #255
	movmi	r0, #128
	movpl	r0, #32
	str	r3, [sp, #0]
	str	r3, [sp, #4]
	fsts	s11, [sp, #8]
	mov	r1, r0
	mov	r2, r0
	bl	mix_colour
.L6:
	ldmea	fp, {fp, sp, pc}
.L12:
	fmstat
	ldr	r3, .L16+8
	ldr	r0, .L16+12
	movpl	r0, r3
	b	.L6
.L17:
	.align	2
.L16:
	.word	0
	.word	-1068236800
	.word	2105376
	.word	6316128
	.size	get_colour, .-get_colour
	.align	2
	.global	generate_terrain
	.ascii	"generate_terrain\000"
	.align	2
	.word	4278190100
	.type	generate_terrain, %function
generate_terrain:
	@ args = 0, pretend = 0, frame = 440, outgoing = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
	fstmfdd	sp!, {d8, d9}
	sub	fp, ip, #4
	sub	ip, sp, #448
	cmp	ip, sl
	bllt	__rt_stkovf_split_big
	flds	s15, .L47
	sub	sp, sp, #448
	ldr	lr, .L47+20
	add	r2, sp, #8
	add	r1, sp, #404
	mov	r3, #99
.L21:
	rsb	r0, r3, #99
	cmp	r0, #25
	sub	ip, r3, #69
	mulle	ip, ip, ip
	fmsrle	s13, ip	@ int
	fsitosle	s14, s13
	fstsle	s14, [r2, #0]
	fstsle	s14, [r1, #0]
	strgt	lr, [r2, #0]	@ float
	strgt	lr, [r1, #0]	@ float
	flds	s14, [r2, #0]
	fdivs	s14, s14, s15
	fstmias	r2!, {s14}
	add	r4, sp, #8
	add	r0, r4, r3, asl #2
	flds	s14, [r0, #0]
	sub	r3, r3, #1
	fdivs	s14, s14, s15
	cmp	r3, #49
	sub	r1, r1, #4
	fsts	s14, [r0, #0]
	bne	.L21
	flds	s16, .L47+4
	flds	s18, .L47+8
	mov	r6, #0
	str	r6, [sp, #408]
	str	r6, [sp, #412]
.L22:
	flds	s13, [sp, #412]	@ int
	flds	s14, [sp, #408]	@ int
	fsitos	s13, s13
	fsitos	s17, s14
	fmrs	r8, s13
	mov	r5, #0
	add	r9, sp, #4
	mov	r4, r5
	mov	r7, #1
.L23:
	fmsr	s13, r4	@ int
	fsitos	s13, s13
	mov	r3, #1
	fmrs	r0, s13
	mov	r1, r8	@ float
	mov	r2, #1048576000
	bl	perlin2d
	fmsr	s14, r5	@ int
	add	r9, r9, #4
	fsitos	s13, s14
	flds	s15, [r9, #0]
	fmsr	s14, r0
	fnmuls	s15, s14, s15
	fsubs	s13, s13, s16
	fmuls	s15, s15, s16
	fsubs	s14, s17, s18
	add	r3, r4, r6
	ldr	r0, .L47+24
	add	r3, r3, r3, asl #3
	add	r4, r4, #1
	add	r3, r0, r3, asl #2
	cmp	r4, #100
	strb	r7, [r3, #32]
	fsts	s13, [r3, #0]
	fsts	s14, [r3, #8]
	fsts	s15, [r3, #4]
	add	r5, r5, #10
	bne	.L23
	ldr	r7, [sp, #412]
	ldr	ip, [sp, #408]
	ldr	r1, .L47+28
	add	r6, r6, #100
	add	r7, r7, #1
	add	ip, ip, #10
	cmp	r6, r1
	str	r7, [sp, #412]
	str	ip, [sp, #408]
	bne	.L22
	ldr	r0, .L47+32
	mov	r8, #0
	str	r6, [r0, #0]
	str	r4, [sp, #408]
	mov	r9, r8
	mov	r7, r8
.L25:
	add	r2, r7, #1
	ldr	r4, .L47+24
	add	r3, r7, #101
	ldr	r6, [sp, #408]
	ldr	lr, [sp, #408]
	add	r1, r2, r2, asl #3
	add	r3, r3, r3, asl #3
	str	r2, [sp, #412]
	add	r1, r4, r1, asl #2
	add	r2, r4, r3, asl #2
	add	r6, r6, #1
	add	ip, r7, #100
	sub	lr, lr, #99
	add	r8, r1, #4
	add	r2, r2, #4
	mov	r3, #0
	str	r6, [sp, #416]
	str	ip, [sp, #428]
	str	lr, [sp, #432]
	str	r7, [sp, #444]
.L28:
	flds	s15, [r8, #0]
	flds	s14, [r2, #-36]
	fcmpzs	s15
	flds	s15, [r2, #0]
	fmstat
	fcmpzs	s14
	moveq	ip, #0
	movne	ip, #1
	fmstat
	fcmpzs	s15
	moveq	r0, #0
	movne	r0, #1
	fmstat
	ldr	r6, [sp, #444]
	ldr	lr, [sp, #408]
	ldr	r7, [sp, #412]
	moveq	r1, #0
	movne	r1, #1
	add	r4, r6, r3
	ldr	r6, [sp, #416]
	add	lr, r3, lr
	tst	r1, r0
	add	r5, r3, r7
	flds	s15, [r8, #-36]
	str	lr, [sp, #440]
	add	r7, r6, r3
	beq	.L26
	fcmpzs	s15
	fmstat
	beq	.L26
	ldr	r6, .L47+36
	rsb	lr, r9, r9, asl #3
	add	r6, r6, lr, asl #2
	str	lr, [sp, #424]
	ldr	lr, [sp, #428]
	str	r6, [sp, #420]
	add	lr, r3, lr
	str	lr, [sp, #436]
	ldr	r6, [sp, #424]
	ldr	lr, .L47+36
	add	r9, r9, #1
	str	r5, [lr, r6, asl #2]
	ldr	r6, [sp, #420]
	ldr	lr, [sp, #436]
	str	r4, [r6, #4]
	str	lr, [r6, #8]
.L26:
	tst	r1, ip
	beq	.L27
	cmp	r0, #0
	beq	.L27
	ldr	r4, .L47+36
	ldr	r6, [sp, #432]
	rsb	r0, r9, r9, asl #3
	add	r1, r4, r0, asl #2
	add	ip, r6, r3
	ldr	lr, [sp, #440]
	stmib	r1, {r7, ip}
	str	lr, [r4, r0, asl #2]
	add	r9, r9, #1
.L27:
	add	r3, r3, #1
	cmp	r3, #99
	add	r8, r8, #36
	add	r2, r2, #36
	bne	.L28
	ldr	r1, [sp, #408]
	ldr	r7, [sp, #428]
	ldr	r0, .L47+40
	add	r1, r1, #100
	cmp	r7, r0
	str	r1, [sp, #408]
	bne	.L25
	ldr	r0, .L47+32
	str	r9, [r0, #4]
	bl	inittrans
	mov	r0, #0
	mov	r1, r0	@ float
	mov	r2, r0	@ float
	bl	translate
	ldr	r0, .L47+32
	bl	transform
	ldr	r1, .L47+32
	ldr	r3, [r1, #4]
	cmp	r3, #0
	ble	.L18
	flds	s17, .L47+12
	flds	s16, .L47+16
	mov	r5, #0
	ldr	r9, .L47+44
	mov	r6, r5
.L30:
	ldr	r2, .L47+32
	add	r6, r6, #2
	ldr	r7, [r2, #12]
	mov	r0, r2
	add	r4, r7, r5
	mov	r1, r4
	bl	calc_normal
	ldr	r1, [r4, #16]	@ float
	ldr	r2, [r4, #20]	@ float
	ldr	r0, [r4, #12]	@ float
	mov	r3, #0
	fsts	s17, [sp, #0]
	str	r9, [sp, #4]	@ float
	bl	calc_dot_product
	ldr	r2, [r7, r5]
	ldr	r3, [r4, #4]
	ldr	r7, .L47+24
	add	r2, r2, r2, asl #3
	add	r3, r3, r3, asl #3
	add	r2, r7, r2, asl #2
	add	r3, r7, r3, asl #2
	flds	s15, [r3, #4]
	flds	s14, [r2, #4]
	ldr	r3, [r4, #8]
	fadds	s14, s14, s15
	add	r3, r3, r3, asl #3
	add	r3, r7, r3, asl #2
	flds	s15, [r3, #4]
	fadds	s15, s14, s15
	fdivs	s15, s15, s16
	ftosizs	s15, s15
	fmrs	r1, s15	@ int
	fmrs	r7, s15	@ int
	mov	r8, r0	@ float
	bl	get_colour
	ldr	ip, .L47+32
	add	r3, r5, #28
	ldr	r2, [ip, #12]
	str	r0, [r4, #24]
	mov	r1, r7
	mov	r0, r8	@ float
	add	r4, r2, r3
	bl	get_colour
	ldr	r1, .L47+32
	str	r0, [r4, #24]
	ldr	r3, [r1, #4]
	add	r5, r5, #56
	cmp	r3, r6
	bgt	.L30
	b	.L48
.L49:
	.align	2
.L47:
	.word	1159479296
	.word	1140457472
	.word	1167867904
	.word	1050253722
	.word	1077936128
	.word	1101004800
	.word	terrain_vertices
	.word	100000
	.word	.LANCHOR0
	.word	terrain_faces
	.word	99900
	.word	1060320051
.L48:
.L18:
	sub	ip, fp, #52
	fldmfdd	ip!, {d8, d9}
	ldmea	fp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
	.size	generate_terrain, .-generate_terrain
	.align	2
	.global	render_terrain
	.ascii	"render_terrain\000"
	.align	2
	.word	4278190096
	.type	render_terrain, %function
render_terrain:
	@ args = 0, pretend = 0, frame = 0, outgoing = 4
	@ frame_needed = 1, uses_anonymous_args = 0
	mov	ip, sp
	stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}
	sub	fp, ip, #4
	cmp	sp, sl
	bllt	__rt_stkovf_split_small
	sub	sp, sp, #4
	mov	r7, r0	@ float
	mov	r6, r1	@ float
	mov	r5, r2	@ float
	ldr	r4, .L51
	bl	inittrans
	ldr	r2, .L51+4
	mov	r3, r5	@ float
	str	r2, [sp, #0]	@ float
	mov	r0, r4
	mov	r1, r7	@ float
	mov	r2, r6	@ float
	bl	calcvisible
	mov	r1, r6	@ float
	mov	r2, r5	@ float
	mov	r0, r7	@ float
	bl	translate
	mov	r0, r4
	bl	transform
	mov	r0, r4
	mov	r1, #200
	bl	project
	mov	r0, r4
	bl	draw_shape
	ldmea	fp, {r4, r5, r6, r7, fp, sp, pc}
.L52:
	.align	2
.L51:
	.word	.LANCHOR0
	.word	1144750080
	.size	render_terrain, .-render_terrain
	.global	terrain_shape
	.comm	terrain_faces,5538456,4
	.comm	terrain_vertices,3600000,4
	.data
	.align	2
.LANCHOR0 = . + 0
	.type	terrain_shape, %object
	.size	terrain_shape, 16
terrain_shape:
	.word	100000
	.word	197802
	.word	terrain_vertices
	.word	terrain_faces
	.ident	"GCC: (GCCSDK GCC 4.7.4 Release 3) 4.7.4"
