{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6","program":"/home/daryl/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rand","/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"cloudabi\"","--cfg","feature=\"fuchsia-cprng\"","--cfg","feature=\"libc\"","--cfg","feature=\"std\"","--cfg","feature=\"winapi\"","-C","metadata=901aea05c51c0f66","-C","extra-filename=-901aea05c51c0f66","--out-dir","/home/daryl/Development/repos/personal/prototypes/ProjectEuler/target/rls/debug/deps","-L","dependency=/home/daryl/Development/repos/personal/prototypes/ProjectEuler/target/rls/debug/deps","--extern","libc=/home/daryl/Development/repos/personal/prototypes/ProjectEuler/target/rls/debug/deps/liblibc-b6c59cfe72dc8591.rmeta","--extern","rand_core=/home/daryl/Development/repos/personal/prototypes/ProjectEuler/target/rls/debug/deps/librand_core-05a726cccea9a391.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/daryl/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/daryl/Development/repos/personal/prototypes/ProjectEuler/target/rls/debug/deps/librand-901aea05c51c0f66.rmeta"},"prelude":{"crate_id":{"name":"rand","disambiguator":[11014278825820203368,6093052395611958444]},"crate_root":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src","external_crates":[{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14071373652398347879,7103549041170480253]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5273437404553270099,5411348343046199890]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[976218546544352998,2134245565175613459]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13100362557277821204,18082047403827332368]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3605767859335716447,18368004652892255649]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7644919710974821109,7113146966867899407]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16182386318199163571,1953714320961812]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12664401352052491985,6928826529401171483]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17274879524252775070,15165904048009513825]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3349673540409454496,14630436784565510244]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14546748579478228105,1074460191194833292]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5671097699487010686,7534711367382902334]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7229860330014108182,6606161976056509340]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7609715969379266585,5596137465280250730]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":15,"id":{"name":"rand_core","disambiguator":[10144576969953112996,10824780794977713751]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","num":16,"id":{"name":"rand_core","disambiguator":[600978078482087548,11270783559476590748]}},{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","num":17,"id":{"name":"libc","disambiguator":[10600223251663336783,13857791758796691265]}}],"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":475,"byte_end":41487,"line_start":11,"line_end":1238,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":123},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11362,"byte_end":11369,"line_start":266,"line_end":266,"column_start":21,"column_end":28},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":128},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11371,"byte_end":11380,"line_start":266,"line_end":266,"column_start":30,"column_end":39},"alias_span":null,"name":"CryptoRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":129},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11382,"byte_end":11393,"line_start":266,"line_end":266,"column_start":41,"column_end":52},"alias_span":null,"name":"SeedableRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":157},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11416,"byte_end":11425,"line_start":267,"line_end":267,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":179},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11427,"byte_end":11432,"line_start":267,"line_end":267,"column_start":32,"column_end":37},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11498,"byte_end":11508,"line_start":270,"line_end":270,"column_start":45,"column_end":55},"alias_span":null,"name":"thread_rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1543},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48421,"byte_end":48433,"line_start":171,"line_end":171,"column_start":37,"column_end":49},"alias_span":null,"name":"Alphanumeric","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48473,"byte_end":48480,"line_start":172,"line_end":172,"column_start":39,"column_end":46},"alias_span":null,"name":"Uniform","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1488},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48519,"byte_end":48531,"line_start":173,"line_end":173,"column_start":38,"column_end":50},"alias_span":null,"name":"OpenClosed01","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1495},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48533,"byte_end":48539,"line_start":173,"line_end":173,"column_start":52,"column_end":58},"alias_span":null,"name":"Open01","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48622,"byte_end":48629,"line_start":175,"line_end":175,"column_start":24,"column_end":31},"alias_span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48633,"byte_end":48638,"line_start":175,"line_end":175,"column_start":35,"column_end":40},"name":"Range","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48699,"byte_end":48704,"line_start":177,"line_end":177,"column_start":38,"column_end":43},"alias_span":null,"name":"Gamma","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1375},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48706,"byte_end":48716,"line_start":177,"line_end":177,"column_start":45,"column_end":55},"alias_span":null,"name":"ChiSquared","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48718,"byte_end":48725,"line_start":177,"line_end":177,"column_start":57,"column_end":64},"alias_span":null,"name":"FisherF","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1402},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48727,"byte_end":48735,"line_start":177,"line_end":177,"column_start":66,"column_end":74},"alias_span":null,"name":"StudentT","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1417},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48798,"byte_end":48804,"line_start":179,"line_end":179,"column_start":39,"column_end":45},"alias_span":null,"name":"Normal","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1425},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48806,"byte_end":48815,"line_start":179,"line_end":179,"column_start":47,"column_end":56},"alias_span":null,"name":"LogNormal","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1410},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48817,"byte_end":48831,"line_start":179,"line_end":179,"column_start":58,"column_end":72},"alias_span":null,"name":"StandardNormal","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1439},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48899,"byte_end":48902,"line_start":181,"line_end":181,"column_start":44,"column_end":47},"alias_span":null,"name":"Exp","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48904,"byte_end":48908,"line_start":181,"line_end":181,"column_start":49,"column_end":53},"alias_span":null,"name":"Exp1","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1446},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":48970,"byte_end":48976,"line_start":183,"line_end":183,"column_start":38,"column_end":44},"alias_span":null,"name":"Pareto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1454},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49040,"byte_end":49047,"line_start":185,"line_end":185,"column_start":39,"column_end":46},"alias_span":null,"name":"Poisson","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1465},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49112,"byte_end":49120,"line_start":187,"line_end":187,"column_start":40,"column_end":48},"alias_span":null,"name":"Binomial","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1473},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49162,"byte_end":49171,"line_start":188,"line_end":188,"column_start":41,"column_end":50},"alias_span":null,"name":"Bernoulli","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49234,"byte_end":49240,"line_start":190,"line_end":190,"column_start":38,"column_end":44},"alias_span":null,"name":"Cauchy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50763,"byte_end":50770,"line_start":242,"line_end":242,"column_start":37,"column_end":44},"alias_span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50774,"byte_end":50779,"line_start":242,"line_end":242,"column_start":48,"column_end":53},"name":"Range","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50817,"byte_end":50830,"line_start":243,"line_end":243,"column_start":37,"column_end":50},"alias_span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50834,"byte_end":50845,"line_start":243,"line_end":243,"column_start":54,"column_end":65},"name":"SampleRange","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186264,"byte_end":186276,"line_start":24,"line_end":24,"column_start":42,"column_end":54},"alias_span":null,"name":"Distribution","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":2108},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186311,"byte_end":186319,"line_start":25,"line_end":25,"column_start":34,"column_end":42},"alias_span":null,"name":"SmallRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":2115},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186321,"byte_end":186327,"line_start":25,"line_end":25,"column_start":44,"column_end":50},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":2122},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186384,"byte_end":186393,"line_start":26,"line_end":26,"column_start":55,"column_end":64},"alias_span":null,"name":"ThreadRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":1081},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186422,"byte_end":186425,"line_start":27,"line_end":27,"column_start":28,"column_end":31},"alias_span":null,"name":"Rng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":16,"index":123},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186427,"byte_end":186434,"line_start":27,"line_end":27,"column_start":33,"column_end":40},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":16,"index":128},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186436,"byte_end":186445,"line_start":27,"line_end":27,"column_start":42,"column_end":51},"alias_span":null,"name":"CryptoRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":16,"index":129},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186447,"byte_end":186458,"line_start":27,"line_end":27,"column_start":53,"column_end":64},"alias_span":null,"name":"SeedableRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186510,"byte_end":186521,"line_start":28,"line_end":28,"column_start":50,"column_end":61},"alias_span":null,"name":"FromEntropy","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186523,"byte_end":186529,"line_start":28,"line_end":28,"column_start":63,"column_end":69},"alias_span":null,"name":"random","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":920},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":186531,"byte_end":186541,"line_start":28,"line_end":28,"column_start":71,"column_end":81},"alias_span":null,"name":"thread_rng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202611,"byte_end":202620,"line_start":326,"line_end":326,"column_start":23,"column_end":32},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":1955},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202643,"byte_end":202651,"line_start":327,"line_end":327,"column_start":22,"column_end":30},"alias_span":null,"name":"Hc128Rng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202674,"byte_end":202682,"line_start":328,"line_end":328,"column_start":22,"column_end":30},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202707,"byte_end":202717,"line_start":329,"line_end":329,"column_start":24,"column_end":34},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":1998},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202743,"byte_end":202754,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":2014},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","byte_start":299911,"byte_end":299918,"line_start":16,"line_end":16,"column_start":43,"column_end":50},"alias_span":null,"name":"ReadRng","value":"","parent":{"krate":0,"index":679}},{"kind":"Use","ref_id":{"krate":0,"index":2020},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","byte_start":299945,"byte_end":299957,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"alias_span":null,"name":"ReseedingRng","value":"","parent":{"krate":0,"index":679}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":297823,"byte_end":297832,"line_start":177,"line_end":177,"column_start":24,"column_end":33},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":678}},{"kind":"Use","ref_id":{"krate":0,"index":2078},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":297834,"byte_end":297844,"line_start":177,"line_end":177,"column_start":35,"column_end":45},"alias_span":null,"name":"TimerError","value":"","parent":{"krate":0,"index":678}},{"kind":"Use","ref_id":{"krate":0,"index":2040},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":297892,"byte_end":297902,"line_start":178,"line_end":178,"column_start":46,"column_end":56},"alias_span":null,"name":"EntropyRng","value":"","parent":{"krate":0,"index":678}},{"kind":"Use","ref_id":{"krate":0,"index":2108},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":297926,"byte_end":297934,"line_start":180,"line_end":180,"column_start":22,"column_end":30},"alias_span":null,"name":"SmallRng","value":"","parent":{"krate":0,"index":678}},{"kind":"Use","ref_id":{"krate":0,"index":2115},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":297955,"byte_end":297961,"line_start":181,"line_end":181,"column_start":20,"column_end":26},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":678}},{"kind":"Use","ref_id":{"krate":0,"index":2122},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":298007,"byte_end":298016,"line_start":182,"line_end":182,"column_start":45,"column_end":54},"alias_span":null,"name":"ThreadRng","value":"","parent":{"krate":0,"index":678}},{"kind":"Use","ref_id":{"krate":0,"index":2133},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":299286,"byte_end":299291,"line_start":218,"line_end":218,"column_start":19,"column_end":24},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":678}},{"kind":"Use","ref_id":{"krate":0,"index":680},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11861,"byte_end":11865,"line_start":282,"line_end":282,"column_start":61,"column_end":65},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2020},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11905,"byte_end":11917,"line_start":283,"line_end":283,"column_start":39,"column_end":51},"alias_span":null,"name":"ReseedingRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2040},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11992,"byte_end":12002,"line_start":286,"line_end":286,"column_start":52,"column_end":62},"alias_span":null,"name":"EntropyRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2133},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12675,"byte_end":12680,"line_start":306,"line_end":306,"column_start":15,"column_end":20},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12713,"byte_end":12722,"line_start":308,"line_end":308,"column_start":31,"column_end":40},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12724,"byte_end":12732,"line_start":308,"line_end":308,"column_start":42,"column_end":50},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12734,"byte_end":12744,"line_start":308,"line_end":308,"column_start":52,"column_end":62},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1998},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12746,"byte_end":12757,"line_start":308,"line_end":308,"column_start":64,"column_end":75},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2115},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12789,"byte_end":12795,"line_start":309,"line_end":309,"column_start":30,"column_end":36},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12871,"byte_end":12880,"line_start":315,"line_end":315,"column_start":20,"column_end":29},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":1055}},{"kind":"Use","ref_id":{"krate":0,"index":2078},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12882,"byte_end":12892,"line_start":315,"line_end":315,"column_start":31,"column_end":41},"alias_span":null,"name":"TimerError","value":"","parent":{"krate":0,"index":1055}},{"kind":"Use","ref_id":{"krate":0,"index":2133},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13584,"byte_end":13589,"line_start":336,"line_end":336,"column_start":19,"column_end":24},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":1059}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13708,"byte_end":13717,"line_start":342,"line_end":342,"column_start":19,"column_end":28},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":1061}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13814,"byte_end":13822,"line_start":347,"line_end":347,"column_start":20,"column_end":28},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":1983},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13824,"byte_end":13834,"line_start":347,"line_end":347,"column_start":30,"column_end":40},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":1063}},{"kind":"Use","ref_id":{"krate":0,"index":2122},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13891,"byte_end":13900,"line_start":350,"line_end":350,"column_start":52,"column_end":61},"alias_span":null,"name":"ThreadRng","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":475,"byte_end":41487,"line_start":11,"line_end":1238,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":387},{"krate":0,"index":402},{"krate":0,"index":678},{"krate":0,"index":1023},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":1119},{"krate":0,"index":2341},{"krate":0,"index":2336},{"krate":0,"index":2331},{"krate":0,"index":2326},{"krate":0,"index":2321},{"krate":0,"index":2316},{"krate":0,"index":2311},{"krate":0,"index":2306},{"krate":0,"index":2301},{"krate":0,"index":2296},{"krate":0,"index":2291},{"krate":0,"index":2286},{"krate":0,"index":2281},{"krate":0,"index":2276},{"krate":0,"index":2271},{"krate":0,"index":2266},{"krate":0,"index":2261},{"krate":0,"index":2256},{"krate":0,"index":2251},{"krate":0,"index":2246},{"krate":0,"index":2241},{"krate":0,"index":2236},{"krate":0,"index":2231},{"krate":0,"index":2226},{"krate":0,"index":2221},{"krate":0,"index":2216},{"krate":0,"index":2211},{"krate":0,"index":2206},{"krate":0,"index":2201},{"krate":0,"index":2196},{"krate":0,"index":2191},{"krate":0,"index":2186},{"krate":0,"index":2181},{"krate":0,"index":2376},{"krate":0,"index":2371},{"krate":0,"index":2366},{"krate":0,"index":2361},{"krate":0,"index":2356},{"krate":0,"index":2351},{"krate":0,"index":2346},{"krate":0,"index":2381},{"krate":0,"index":2386},{"krate":0,"index":1120},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":1125},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140}],"decl_id":null,"docs":" Utilities for random number generation","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9898,"byte_end":9920,"line_start":229,"line_end":229,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":9921,"byte_end":9960,"line_start":230,"line_end":230,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"distributions","qualname":"::distributions","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":87},{"krate":0,"index":126},{"krate":0,"index":149},{"krate":0,"index":167},{"krate":0,"index":177},{"krate":0,"index":188},{"krate":0,"index":200},{"krate":0,"index":209},{"krate":0,"index":218},{"krate":0,"index":228},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":286},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":349},{"krate":0,"index":356},{"krate":0,"index":1901},{"krate":0,"index":1909},{"krate":0,"index":362},{"krate":0,"index":1915},{"krate":0,"index":1920},{"krate":0,"index":1919},{"krate":0,"index":1917},{"krate":0,"index":370},{"krate":0,"index":1922},{"krate":0,"index":1932},{"krate":0,"index":1929},{"krate":0,"index":1926},{"krate":0,"index":1934},{"krate":0,"index":1939},{"krate":0,"index":374},{"krate":0,"index":378},{"krate":0,"index":383}],"decl_id":null,"docs":" Generating random samples from probability distributions.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uniform","qualname":"::distributions::uniform","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":1145},{"krate":0,"index":1153},{"krate":0,"index":1151},{"krate":0,"index":1148},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":66},{"krate":0,"index":1156},{"krate":0,"index":1166},{"krate":0,"index":1164},{"krate":0,"index":1161},{"krate":0,"index":69},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":75},{"krate":0,"index":1278},{"krate":0,"index":76},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1294},{"krate":0,"index":1292},{"krate":0,"index":1289},{"krate":0,"index":77},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1317},{"krate":0,"index":1323},{"krate":0,"index":1322},{"krate":0,"index":1320},{"krate":0,"index":1325},{"krate":0,"index":1334},{"krate":0,"index":1333},{"krate":0,"index":1331},{"krate":0,"index":78},{"krate":0,"index":80}],"decl_id":null,"docs":" A distribution uniformly sampling numbers within a given range.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76408,"byte_end":76415,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"Uniform","qualname":"::distributions::uniform::Uniform","value":"Uniform {  }","parent":null,"children":[{"krate":0,"index":1147}],"decl_id":null,"docs":" Sample values uniformly between two bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76665,"byte_end":76668,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"new","qualname":"<Uniform<X>>::new","value":"fn (low: X, high: X) -> Uniform<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uniform` instance which samples uniformly from the half\n open range `[low, high)` (excluding `high`). Panics if `low >= high`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76919,"byte_end":76932,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"new_inclusive","qualname":"<Uniform<X>>::new_inclusive","value":"fn (low: X, high: X) -> Uniform<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uniform` instance which samples uniformly from the closed\n range `[low, high]` (inclusive). Panics if `low > high`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77562,"byte_end":77575,"line_start":184,"line_end":184,"column_start":11,"column_end":24},"name":"SampleUniform","qualname":"::distributions::uniform::SampleUniform","value":"SampleUniform: Sized","parent":null,"children":[{"krate":0,"index":57}],"decl_id":null,"docs":" Helper trait for creating objects using the correct implementation of\n [`UniformSampler`] for the sampling type.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77659,"byte_end":77666,"line_start":186,"line_end":186,"column_start":10,"column_end":17},"name":"Sampler","qualname":"::distributions::uniform::SampleUniform::Sampler","value":"type Sampler: UniformSampler<X = Self>;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The `UniformSampler` implementation supporting type `X`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78176,"byte_end":78190,"line_start":200,"line_end":200,"column_start":11,"column_end":25},"name":"UniformSampler","qualname":"::distributions::uniform::UniformSampler","value":"UniformSampler: Sized","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64}],"decl_id":null,"docs":" Helper trait handling actual uniform sampling.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78258,"byte_end":78259,"line_start":202,"line_end":202,"column_start":10,"column_end":11},"name":"X","qualname":"::distributions::uniform::UniformSampler::X","value":"type X;","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The type sampled by this implementation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78522,"byte_end":78525,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"new","qualname":"::distributions::uniform::UniformSampler::new","value":"fn (low: Self::X, high: Self::X) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Construct self, with inclusive lower bound and exclusive upper bound\n `[low, high)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78805,"byte_end":78818,"line_start":216,"line_end":216,"column_start":8,"column_end":21},"name":"new_inclusive","qualname":"::distributions::uniform::UniformSampler::new_inclusive","value":"fn (low: Self::X, high: Self::X) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Construct self, with inclusive bounds `[low, high]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78889,"byte_end":78895,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::uniform::UniformSampler::sample","value":"fn <R> (&self, rng: &mut R) -> Self::X","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Sample a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79507,"byte_end":79520,"line_start":232,"line_end":232,"column_start":8,"column_end":21},"name":"sample_single","qualname":"::distributions::uniform::UniformSampler::sample_single","value":"fn <R> (low: Self::X, high: Self::X, rng: &mut R) -> Self::X","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Sample a single value uniformly from a range with inclusive lower bound\n and exclusive upper bound `[low, high)`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1156},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":82182,"byte_end":82192,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"UniformInt","qualname":"::distributions::uniform::UniformInt","value":"UniformInt {  }","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for integer types.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":72},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":87210,"byte_end":87216,"line_start":414,"line_end":414,"column_start":10,"column_end":16},"name":"Output","qualname":"::distributions::uniform::WideningMultiply::Output","value":"type Output;","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1285},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":90862,"byte_end":90874,"line_start":521,"line_end":521,"column_start":12,"column_end":24},"name":"UniformFloat","qualname":"::distributions::uniform::UniformFloat","value":"UniformFloat {  }","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for floating-point types.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1317},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":93870,"byte_end":93885,"line_start":600,"line_end":600,"column_start":12,"column_end":27},"name":"UniformDuration","qualname":"::distributions::uniform::UniformDuration","value":"UniformDuration {  }","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for `Duration`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":93805,"byte_end":93828,"line_start":598,"line_end":598,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gamma","qualname":"::distributions::gamma","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":1336},{"krate":0,"index":1341},{"krate":0,"index":1340},{"krate":0,"index":1338},{"krate":0,"index":1343},{"krate":0,"index":1356},{"krate":0,"index":1355},{"krate":0,"index":1353},{"krate":0,"index":1358},{"krate":0,"index":1364},{"krate":0,"index":1363},{"krate":0,"index":1361},{"krate":0,"index":1366},{"krate":0,"index":1373},{"krate":0,"index":1372},{"krate":0,"index":1370},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":1375},{"krate":0,"index":1380},{"krate":0,"index":1379},{"krate":0,"index":1377},{"krate":0,"index":1382},{"krate":0,"index":1391},{"krate":0,"index":1390},{"krate":0,"index":1388},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":1393},{"krate":0,"index":1400},{"krate":0,"index":1399},{"krate":0,"index":1397},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":1402},{"krate":0,"index":1408},{"krate":0,"index":1407},{"krate":0,"index":1405},{"krate":0,"index":121},{"krate":0,"index":123}],"decl_id":null,"docs":" The Gamma and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49260,"byte_end":49281,"line_start":193,"line_end":193,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":103289,"byte_end":103294,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Gamma","qualname":"::distributions::gamma::Gamma","value":"Gamma {  }","parent":null,"children":[{"krate":0,"index":1337}],"decl_id":null,"docs":" The Gamma distribution `Gamma(shape, scale)` distribution.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":104579,"byte_end":104582,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Gamma>::new","value":"fn (shape: f64, scale: f64) -> Gamma","parent":null,"children":[],"decl_id":null,"docs":" Construct an object representing the `Gamma(shape, scale)`\n distribution.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":104558,"byte_end":104567,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1375},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":107200,"byte_end":107210,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"ChiSquared","qualname":"::distributions::gamma::ChiSquared","value":"ChiSquared {  }","parent":null,"children":[{"krate":0,"index":1376}],"decl_id":null,"docs":" The chi-squared distribution `χ²(k)`, where `k` is the degrees of\n freedom.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":107676,"byte_end":107679,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<ChiSquared>::new","value":"fn (k: f64) -> ChiSquared","parent":null,"children":[],"decl_id":null,"docs":" Create a new chi-squared distribution with degrees-of-freedom\n `k`. Panics if `k < 0`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":108783,"byte_end":108790,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"FisherF","qualname":"::distributions::gamma::FisherF","value":"FisherF {  }","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"decl_id":null,"docs":" The Fisher F distribution `F(m, n)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":109125,"byte_end":109128,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"new","qualname":"<FisherF>::new","value":"fn (m: f64, n: f64) -> FisherF","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FisherF` distribution, with the given\n parameter. Panics if either `m` or `n` are not positive.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1402},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":109957,"byte_end":109965,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"StudentT","qualname":"::distributions::gamma::StudentT","value":"StudentT {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404}],"decl_id":null,"docs":" The Student t distribution, `t(nu)`, where `nu` is the degrees of\n freedom.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":110133,"byte_end":110136,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"new","qualname":"<StudentT>::new","value":"fn (n: f64) -> StudentT","parent":null,"children":[],"decl_id":null,"docs":" Create a new Student t distribution with `n` degrees of\n freedom. Panics if `n <= 0`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"normal","qualname":"::distributions::normal","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":1410},{"krate":0,"index":1415},{"krate":0,"index":1414},{"krate":0,"index":1412},{"krate":0,"index":133},{"krate":0,"index":1417},{"krate":0,"index":1423},{"krate":0,"index":1422},{"krate":0,"index":1420},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":1425},{"krate":0,"index":1430},{"krate":0,"index":1429},{"krate":0,"index":1427},{"krate":0,"index":144},{"krate":0,"index":146}],"decl_id":null,"docs":" The normal and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49312,"byte_end":49333,"line_start":195,"line_end":195,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1410},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":113090,"byte_end":113104,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"StandardNormal","qualname":"::distributions::normal::StandardNormal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Samples floating-point numbers according to the normal distribution\n `N(0, 1)` (a.k.a. a standard normal, or Gaussian). This is equivalent to\n `Normal::new(0.0, 1.0)` but faster.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1417},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":114748,"byte_end":114754,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"Normal","qualname":"::distributions::normal::Normal","value":"Normal {  }","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419}],"decl_id":null,"docs":" The normal distribution `N(mean, std_dev**2)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":114996,"byte_end":114999,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<Normal>::new","value":"fn (mean: f64, std_dev: f64) -> Normal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Normal` distribution with the given mean and\n standard deviation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":114975,"byte_end":114984,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1425},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":115861,"byte_end":115870,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"LogNormal","qualname":"::distributions::normal::LogNormal","value":"LogNormal {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" The log-normal distribution `ln N(mean, std_dev**2)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":116102,"byte_end":116105,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<LogNormal>::new","value":"fn (mean: f64, std_dev: f64) -> LogNormal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LogNormal` distribution with the given mean\n and standard deviation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":116081,"byte_end":116090,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":149},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exponential","qualname":"::distributions::exponential","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":1432},{"krate":0,"index":1437},{"krate":0,"index":1436},{"krate":0,"index":1434},{"krate":0,"index":156},{"krate":0,"index":1439},{"krate":0,"index":1444},{"krate":0,"index":1443},{"krate":0,"index":1441},{"krate":0,"index":162},{"krate":0,"index":164}],"decl_id":null,"docs":" The exponential distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49365,"byte_end":49386,"line_start":197,"line_end":197,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":118629,"byte_end":118633,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Exp1","qualname":"::distributions::exponential::Exp1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Samples floating-point numbers according to the exponential distribution,\n with rate parameter `λ = 1`. This is equivalent to `Exp::new(1.0)` or\n sampling with `-rng.gen::<f64>().ln()`, but faster.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1439},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":119634,"byte_end":119637,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"Exp","qualname":"::distributions::exponential::Exp","value":"Exp {  }","parent":null,"children":[{"krate":0,"index":1440}],"decl_id":null,"docs":" The exponential distribution `Exp(lambda)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":119878,"byte_end":119881,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Exp>::new","value":"fn (lambda: f64) -> Exp","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Exp` with the given shape parameter\n `lambda`. Panics if `lambda <= 0`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":119857,"byte_end":119866,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/pareto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pareto","qualname":"::distributions::pareto","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/pareto.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":1446},{"krate":0,"index":1452},{"krate":0,"index":1451},{"krate":0,"index":1449},{"krate":0,"index":172},{"krate":0,"index":174}],"decl_id":null,"docs":" The Pareto distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49423,"byte_end":49444,"line_start":199,"line_end":199,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1446},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/pareto.rs","byte_start":121558,"byte_end":121564,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Pareto","qualname":"::distributions::pareto::Pareto","value":"Pareto {  }","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448}],"decl_id":null,"docs":" Samples floating-point numbers according to the Pareto distribution","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/pareto.rs","byte_start":121935,"byte_end":121938,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Pareto>::new","value":"fn (scale: f64, shape: f64) -> Pareto","parent":null,"children":[],"decl_id":null,"docs":" Construct a new Pareto distribution with given `scale` and `shape`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/poisson.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"poisson","qualname":"::distributions::poisson","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/poisson.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":1454},{"krate":0,"index":1463},{"krate":0,"index":1462},{"krate":0,"index":1460},{"krate":0,"index":183},{"krate":0,"index":185}],"decl_id":null,"docs":" The Poisson distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49476,"byte_end":49499,"line_start":201,"line_end":201,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1454},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/poisson.rs","byte_start":123767,"byte_end":123774,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Poisson","qualname":"::distributions::poisson::Poisson","value":"Poisson {  }","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"decl_id":null,"docs":" The Poisson distribution `Poisson(lambda)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/poisson.rs","byte_start":124044,"byte_end":124047,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Poisson>::new","value":"fn (lambda: f64) -> Poisson","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Poisson` with the given shape parameter\n `lambda`. Panics if `lambda <= 0`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/binomial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binomial","qualname":"::distributions::binomial","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/binomial.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":1465},{"krate":0,"index":1471},{"krate":0,"index":1470},{"krate":0,"index":1468},{"krate":0,"index":195},{"krate":0,"index":197}],"decl_id":null,"docs":" The binomial distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49532,"byte_end":49555,"line_start":203,"line_end":203,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1465},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/binomial.rs","byte_start":128988,"byte_end":128996,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"Binomial","qualname":"::distributions::binomial::Binomial","value":"Binomial {  }","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"decl_id":null,"docs":" The binomial distribution `Binomial(n, p)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/binomial.rs","byte_start":129289,"byte_end":129292,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Binomial>::new","value":"fn (n: u64, p: f64) -> Binomial","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Binomial` with the given shape parameters `n` (number\n of trials) and `p` (probability of success).","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":200},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bernoulli","qualname":"::distributions::bernoulli","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":1473},{"krate":0,"index":1478},{"krate":0,"index":1477},{"krate":0,"index":1475},{"krate":0,"index":203},{"krate":0,"index":206}],"decl_id":null,"docs":" The Bernoulli distribution.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1473},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":135015,"byte_end":135024,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"Bernoulli","qualname":"::distributions::bernoulli::Bernoulli","value":"Bernoulli {  }","parent":null,"children":[{"krate":0,"index":1474}],"decl_id":null,"docs":" The Bernoulli distribution.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":135715,"byte_end":135718,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Bernoulli>::new","value":"fn (p: f64) -> Bernoulli","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Bernoulli` with the given probability of success `p`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":135694,"byte_end":135703,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":209},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/cauchy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cauchy","qualname":"::distributions::cauchy","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/cauchy.rs","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":1480},{"krate":0,"index":1486},{"krate":0,"index":1485},{"krate":0,"index":1483},{"krate":0,"index":213},{"krate":0,"index":215}],"decl_id":null,"docs":" The Cauchy distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49623,"byte_end":49646,"line_start":206,"line_end":206,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1480},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/cauchy.rs","byte_start":138670,"byte_end":138676,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Cauchy","qualname":"::distributions::cauchy::Cauchy","value":"Cauchy {  }","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482}],"decl_id":null,"docs":" The Cauchy distribution `Cauchy(median, scale)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/cauchy.rs","byte_start":138901,"byte_end":138904,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Cauchy>::new","value":"fn (median: f64, scale: f64) -> Cauchy","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Cauchy` with the given shape parameters\n `median` the peak location and `scale` the scale factor.\n Panics if `scale <= 0`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1488},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":142539,"byte_end":142551,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"OpenClosed01","qualname":"::distributions::float::OpenClosed01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A distribution to sample floating point numbers uniformly in the half-open\n interval `(0, 1]`, i.e. including 1 but not 0.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1495},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":143451,"byte_end":143457,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"Open01","qualname":"::distributions::float::Open01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A distribution to sample floating point numbers uniformly in the open\n interval `(0, 1)`, i.e. not including either endpoint.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/float.rs","byte_start":143499,"byte_end":143500,"line_start":72,"line_end":72,"column_start":10,"column_end":11},"name":"F","qualname":"::distributions::float::IntoFloat::F","value":"type F;","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1543},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":154967,"byte_end":154979,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"Alphanumeric","qualname":"::distributions::other::Alphanumeric","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sample a `char`, uniformly distributed over ASCII letters and numbers:\n a-z, A-Z and 0-9.\n \n # Example","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":300},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49995,"byte_end":50001,"line_start":221,"line_end":221,"column_start":11,"column_end":17},"name":"Sample","qualname":"::distributions::Sample","value":"Sample<Support>","parent":null,"children":[{"krate":0,"index":302}],"decl_id":null,"docs":" Types that can be used to create a random instance of `Support`.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"use Distribution instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49923,"byte_end":49984,"line_start":220,"line_end":220,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50115,"byte_end":50121,"line_start":224,"line_end":224,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Sample::sample","value":"fn <R> (&mut self, rng: &mut R) -> Support","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" Generate a random value of `Support`, using `rng` as the\n source of randomness.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":304},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50465,"byte_end":50482,"line_start":234,"line_end":234,"column_start":11,"column_end":28},"name":"IndependentSample","qualname":"::distributions::IndependentSample","value":"IndependentSample<Support>: Sample<Support>","parent":null,"children":[{"krate":0,"index":306}],"decl_id":null,"docs":" `Sample`s that do not require keeping track of state.","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50372,"byte_end":50392,"line_start":232,"line_end":232,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note = \"use Distribution instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50393,"byte_end":50454,"line_start":233,"line_end":233,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50551,"byte_end":50561,"line_start":236,"line_end":236,"column_start":8,"column_end":18},"name":"ind_sample","qualname":"::distributions::IndependentSample::ind_sample","value":"fn <R> (&self, &mut R) -> Support","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Generate a random value.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50719,"byte_end":50724,"line_start":241,"line_end":241,"column_start":9,"column_end":14},"name":"range","qualname":"::distributions::range","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" DEPRECATED: Use `distributions::uniform` instead.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"use uniform instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50654,"byte_end":50710,"line_start":240,"line_end":240,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":349},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53382,"byte_end":53394,"line_start":315,"line_end":315,"column_start":11,"column_end":23},"name":"Distribution","qualname":"::distributions::Distribution","value":"Distribution<T>","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":353}],"decl_id":null,"docs":" Types (distributions) that can be used to create a random instance of `T`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":53488,"byte_end":53494,"line_start":317,"line_end":317,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Distribution::sample","value":"fn <R> (&self, rng: &mut R) -> T","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" Generate a random value of `T`, using `rng` as the source of randomness.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":54343,"byte_end":54354,"line_start":343,"line_end":343,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::distributions::Distribution::sample_iter","value":"fn <'a, R> (&'a self, rng: &'a mut R) -> DistIter<'a, Self, R, T>","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" Create an iterator that generates random values of `T`, using `rng` as\n the source of randomness.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1901},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55127,"byte_end":55135,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"DistIter","qualname":"::distributions::DistIter","value":"DistIter {  }","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908}],"decl_id":null,"docs":" An iterator that generates random values of `T` with distribution `D`,\n using `R` as the source of randomness.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1915},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58338,"byte_end":58346,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"Standard","qualname":"::distributions::Standard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A generic random value distribution, implemented for many primitive types.\n Usually generates values with a numerically uniform distribution, and with a\n range appropriate to the type.\n \n ## Built-in Implementations","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1922},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58616,"byte_end":58624,"line_start":462,"line_end":462,"column_start":12,"column_end":20},"name":"Weighted","qualname":"::distributions::Weighted","value":"Weighted { weight, item }","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925}],"decl_id":null,"docs":" A value with a particular weight for use with `WeightedChoice`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1924},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58680,"byte_end":58686,"line_start":464,"line_end":464,"column_start":9,"column_end":15},"name":"weight","qualname":"::distributions::Weighted::weight","value":"u32","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" The numerical weight of this item\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1925},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58749,"byte_end":58753,"line_start":466,"line_end":466,"column_start":9,"column_end":13},"name":"item","qualname":"::distributions::Weighted::item","value":"T","parent":{"krate":0,"index":1922},"children":[],"decl_id":null,"docs":" The actual item which is being weighted\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1934},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59711,"byte_end":59725,"line_start":494,"line_end":494,"column_start":12,"column_end":26},"name":"WeightedChoice","qualname":"::distributions::WeightedChoice","value":"WeightedChoice {  }","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938}],"decl_id":null,"docs":" A distribution that selects from a finite collection of weighted items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":60057,"byte_end":60060,"line_start":507,"line_end":507,"column_start":12,"column_end":15},"name":"new","qualname":"<WeightedChoice>::new","value":"fn (items: &'a mut [Weighted<T>]) -> WeightedChoice<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WeightedChoice`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":387},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prelude.rs","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":398}],"decl_id":null,"docs":" Convenience re-export of common members","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":402},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prng","qualname":"::prng","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":451},{"krate":0,"index":496},{"krate":0,"index":558},{"krate":0,"index":621},{"krate":0,"index":651},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677}],"decl_id":null,"docs":" Pseudo-random number generators.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":403},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chacha","qualname":"::prng::chacha","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":1943},{"krate":0,"index":1948},{"krate":0,"index":1946},{"krate":0,"index":416},{"krate":0,"index":421},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":443},{"krate":0,"index":448},{"krate":0,"index":449}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1943},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":205822,"byte_end":205831,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"ChaChaRng","qualname":"::prng::chacha::ChaChaRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A cryptographically secure random number generator that uses the ChaCha\n algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":207370,"byte_end":207382,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<ChaChaRng>::new_unseeded","value":"fn () -> ChaChaRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ChaCha random number generator using the default\n fixed key of 8 zero words.","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":207281,"byte_end":207358,"line_start":130,"line_end":130,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":209927,"byte_end":209937,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"set_stream","qualname":"<ChaChaRng>::set_stream","value":"fn (&mut self, stream: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the stream number.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1950},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":210657,"byte_end":210667,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"ChaChaCore","qualname":"::prng::chacha::ChaChaCore","value":"ChaChaCore {  }","parent":null,"children":[{"krate":0,"index":1951}],"decl_id":null,"docs":" The core of `ChaChaRng`, used with `BlockRng`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":451},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hc128","qualname":"::prng::hc128","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":1955},{"krate":0,"index":1960},{"krate":0,"index":1958},{"krate":0,"index":463},{"krate":0,"index":468},{"krate":0,"index":473},{"krate":0,"index":1962},{"krate":0,"index":1966},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":481},{"krate":0,"index":490},{"krate":0,"index":495}],"decl_id":null,"docs":" The HC-128 random number generator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1955},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":223857,"byte_end":223865,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"Hc128Rng","qualname":"::prng::hc128::Hc128Rng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A cryptographically secure random number generator that uses the HC-128\n algorithm.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1962},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":224735,"byte_end":224744,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"Hc128Core","qualname":"::prng::hc128::Hc128Core","value":"Hc128Core {  }","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1965}],"decl_id":null,"docs":" The core of `Hc128Rng`, used with `BlockRng`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isaac","qualname":"::prng::isaac","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":1968},{"krate":0,"index":1973},{"krate":0,"index":1971},{"krate":0,"index":513},{"krate":0,"index":518},{"krate":0,"index":525},{"krate":0,"index":1975},{"krate":0,"index":1981},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":542},{"krate":0,"index":547}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1968},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":244286,"byte_end":244294,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"IsaacRng","qualname":"::prng::isaac::IsaacRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that uses the ISAAC algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":245669,"byte_end":245681,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<IsaacRng>::new_unseeded","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using the default\n fixed seed.","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":245580,"byte_end":245657,"line_start":141,"line_end":141,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":246030,"byte_end":246042,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<IsaacRng>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.6.0\", note =\n             \"use SeedableRng::seed_from_u64 instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":245943,"byte_end":246018,"line_start":149,"line_end":149,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1975},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":246247,"byte_end":246256,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"IsaacCore","qualname":"::prng::isaac::IsaacCore","value":"IsaacCore {  }","parent":null,"children":[{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980}],"decl_id":null,"docs":" The core of `IsaacRng`, used with `BlockRng`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":558},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isaac64","qualname":"::prng::isaac64","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":1983},{"krate":0,"index":1988},{"krate":0,"index":1986},{"krate":0,"index":575},{"krate":0,"index":580},{"krate":0,"index":587},{"krate":0,"index":1990},{"krate":0,"index":1996},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":604},{"krate":0,"index":610}],"decl_id":null,"docs":" The ISAAC-64 random number generator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1983},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":263010,"byte_end":263020,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"Isaac64Rng","qualname":"::prng::isaac64::Isaac64Rng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that uses ISAAC-64, the 64-bit variant of the\n ISAAC algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":264429,"byte_end":264441,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<Isaac64Rng>::new_unseeded","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 64-bit ISAAC random number generator using the\n default fixed seed.","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":264340,"byte_end":264417,"line_start":131,"line_end":131,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":264793,"byte_end":264805,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<Isaac64Rng>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC-64 random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.6.0\", note =\n             \"use SeedableRng::seed_from_u64 instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":264706,"byte_end":264781,"line_start":139,"line_end":139,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1990},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":265012,"byte_end":265023,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"Isaac64Core","qualname":"::prng::isaac64::Isaac64Core","value":"Isaac64Core {  }","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995}],"decl_id":null,"docs":" The core of `Isaac64Rng`, used with `BlockRng`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":270893,"byte_end":270905,"line_start":292,"line_end":292,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<Isaac64Core>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC-64 random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.6.0\", note =\n             \"use SeedableRng::seed_from_u64 instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":270806,"byte_end":270881,"line_start":291,"line_end":291,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1998},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":279913,"byte_end":279924,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"XorShiftRng","qualname":"::prng::xorshift::XorShiftRng","value":"XorShiftRng {  }","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002}],"decl_id":null,"docs":" An Xorshift random number generator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":280645,"byte_end":280657,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<XorShiftRng>::new_unseeded","value":"fn () -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Creates a new XorShiftRng instance which is not seeded.","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":280556,"byte_end":280633,"line_start":49,"line_end":49,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2005},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287154,"byte_end":287164,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"IsaacArray","qualname":"::prng::isaac_array::IsaacArray","value":"IsaacArray {  }","parent":null,"children":[{"krate":0,"index":2007}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287041,"byte_end":287080,"line_start":24,"line_end":24,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":678},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rngs","qualname":"::rngs","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":750},{"krate":0,"index":784},{"krate":0,"index":862},{"krate":0,"index":874},{"krate":0,"index":890},{"krate":0,"index":908},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":1022}],"decl_id":null,"docs":" Random number generators and adapters for common usage:","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":679},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adapter","qualname":"::rngs::adapter","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":698},{"krate":0,"index":748},{"krate":0,"index":749}],"decl_id":null,"docs":" Wrappers / adapters forming RNGs\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":680},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::rngs::adapter::read","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/read.rs","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":2014},{"krate":0,"index":2017},{"krate":0,"index":687},{"krate":0,"index":690}],"decl_id":null,"docs":" A wrapper around any Read to treat it as an RNG.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","byte_start":299802,"byte_end":299823,"line_start":13,"line_end":13,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2014},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/read.rs","byte_start":301549,"byte_end":301556,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"ReadRng","qualname":"::rngs::adapter::read::ReadRng","value":"ReadRng {  }","parent":null,"children":[{"krate":0,"index":2016}],"decl_id":null,"docs":" An RNG that reads random bytes straight from any type supporting\n `std::io::Read`, for example files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/read.rs","byte_start":301663,"byte_end":301666,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadRng<R>>::new","value":"fn (r: R) -> ReadRng<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReadRng` from a `Read`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2020},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":307070,"byte_end":307082,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"ReseedingRng","qualname":"::rngs::adapter::reseeding::ReseedingRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around any PRNG which reseeds the underlying PRNG after it has\n generated a certain number of random bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":307579,"byte_end":307582,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<ReseedingRng<R, Rsdr>>::new","value":"fn (rng: R, threshold: u64, reseeder: Rsdr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReseedingRng` with the given parameters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":307767,"byte_end":307773,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"reseed","qualname":"<ReseedingRng<R, Rsdr>>::reseed","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Reseed the internal PRNG.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2040},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":315779,"byte_end":315789,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"EntropyRng","qualname":"::rngs::entropy::EntropyRng","value":"EntropyRng {  }","parent":null,"children":[{"krate":0,"index":2041}],"decl_id":null,"docs":" An interface returning random data from external source(s), provided\n specifically for securely seeding algorithmic generators (PRNGs).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":316199,"byte_end":316202,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<EntropyRng>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `EntropyRng`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":784},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jitter","qualname":"::rngs::jitter","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":791},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":808},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":2078},{"krate":0,"index":2099},{"krate":0,"index":2097},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":849},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":861}],"decl_id":null,"docs":" Non-physical true random number generator based on timing jitter.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":328970,"byte_end":328979,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"JitterRng","qualname":"::rngs::jitter::JitterRng","value":"JitterRng {  }","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"decl_id":null,"docs":" A true random number generator based on jitter in the CPU execution time,\n and jitter in memory access time.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2079},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332344,"byte_end":332351,"line_start":226,"line_end":226,"column_start":5,"column_end":12},"name":"NoTimer","qualname":"::rngs::jitter::TimerError::NoTimer","value":"TimerError::NoTimer","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":" No timer available.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2081},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332411,"byte_end":332422,"line_start":228,"line_end":228,"column_start":5,"column_end":16},"name":"CoarseTimer","qualname":"::rngs::jitter::TimerError::CoarseTimer","value":"TimerError::CoarseTimer","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":" Timer too coarse to use as an entropy source.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2083},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332475,"byte_end":332487,"line_start":230,"line_end":230,"column_start":5,"column_end":17},"name":"NotMonotonic","qualname":"::rngs::jitter::TimerError::NotMonotonic","value":"TimerError::NotMonotonic","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":" Timer is not monotonically increasing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2085},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332541,"byte_end":332556,"line_start":232,"line_end":232,"column_start":5,"column_end":20},"name":"TinyVariantions","qualname":"::rngs::jitter::TimerError::TinyVariantions","value":"TimerError::TinyVariantions","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":" Variations of deltas of time too small.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2087},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332624,"byte_end":332636,"line_start":234,"line_end":234,"column_start":5,"column_end":17},"name":"TooManyStuck","qualname":"::rngs::jitter::TimerError::TooManyStuck","value":"TimerError::TooManyStuck","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":" Too many stuck results (indicating no added entropy).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2089},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332661,"byte_end":332676,"line_start":236,"line_end":236,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::rngs::jitter::TimerError::__Nonexhaustive","value":"TimerError::__Nonexhaustive","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2078},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332299,"byte_end":332309,"line_start":224,"line_end":224,"column_start":10,"column_end":20},"name":"TimerError","qualname":"::rngs::jitter::TimerError","value":"TimerError::{NoTimer, CoarseTimer, NotMonotonic, TinyVariantions, TooManyStuck, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089}],"decl_id":null,"docs":" An error that can occur when [`JitterRng::test_timer`] fails.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":334455,"byte_end":334458,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<JitterRng>::new","value":"fn () -> Result<JitterRng, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`. Makes use of `std::time` for a timer, or a\n platform-specific function with higher accuracy if necessary and\n available.","sig":null,"attributes":[{"value":"cfg(all (feature = \"std\", not (target_arch = \"wasm32\")))","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":334388,"byte_end":334443,"line_start":286,"line_end":286,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":336839,"byte_end":336853,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"new_with_timer","qualname":"<JitterRng>::new_with_timer","value":"fn (timer: fn() -> u64) -> JitterRng","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n A custom timer can be supplied, making it possible to use `JitterRng` in\n `no_std` environments.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":337637,"byte_end":337647,"line_start":369,"line_end":369,"column_start":12,"column_end":22},"name":"set_rounds","qualname":"<JitterRng>::set_rounds","value":"fn (&mut self, rounds: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures how many rounds are used to generate each 64-bit value.\n This must be greater than zero, and has a big impact on performance\n and output quality.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":348161,"byte_end":348171,"line_start":614,"line_end":614,"column_start":12,"column_end":22},"name":"test_timer","qualname":"<JitterRng>::test_timer","value":"fn (&mut self) -> Result<u8, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Basic quality tests on the timer, by measuring CPU timing jitter a few\n hundred times.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":354696,"byte_end":354707,"line_start":765,"line_end":765,"column_start":12,"column_end":23},"name":"timer_stats","qualname":"<JitterRng>::timer_stats","value":"fn (&mut self, var_rounds: bool) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Statistical test: return the timer delta of one normal run of the\n `JitterRng` entropy collector.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":862},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock","qualname":"::rngs::mock","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":2101},{"krate":0,"index":2106},{"krate":0,"index":2104},{"krate":0,"index":867},{"krate":0,"index":869}],"decl_id":null,"docs":" Mock random number generator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2101},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":359735,"byte_end":359742,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"StepRng","qualname":"::rngs::mock::StepRng","value":"StepRng {  }","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103}],"decl_id":null,"docs":" A simple implementation of `RngCore` for testing purposes.\n \n This generates an arithmetic sequence (i.e. adds a constant each step)\n over a `u64` number, using wrapping arithmetic. If the increment is 0\n the generator yields a constant.\n \n ```\n use rand::Rng;\n use rand::rngs::mock::StepRng;\n \n let mut my_rng = StepRng::new(2, 1);\n let sample: [u64; 3] = my_rng.gen();\n assert_eq!(sample, [2, 3, 4]);\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":359932,"byte_end":359935,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<StepRng>::new","value":"fn (initial: u64, increment: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `StepRng`, yielding an arithmetic sequence starting with\n `initial` and incremented by `increment` each time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2108},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":363130,"byte_end":363138,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"SmallRng","qualname":"::rngs::small::SmallRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" An RNG recommended when small state, cheap initialization and good\n performance are required. The PRNG algorithm in `SmallRng` is chosen to be\n efficient on the current platform, **without consideration for cryptography\n or security**. The size of its state is much smaller than for [`StdRng`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2115},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":365215,"byte_end":365221,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"StdRng","qualname":"::rngs::std::StdRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient\n on the current platform, to be statistically strong and unpredictable\n (meaning a cryptographically secure PRNG).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2122},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/thread.rs","byte_start":369951,"byte_end":369960,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"ThreadRng","qualname":"::rngs::thread::ThreadRng","value":"ThreadRng {  }","parent":null,"children":[{"krate":0,"index":2123}],"decl_id":null,"docs":" The type returned by [`thread_rng`], essentially just a reference to the\n PRNG in thread-local memory.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":920},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/thread.rs","byte_start":370878,"byte_end":370888,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"thread_rng","qualname":"::rngs::thread::thread_rng","value":"fn () -> ThreadRng","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the lazily-initialized thread-local random number\n generator, seeded by the system. Intended to be used in method\n chaining style, e.g. `thread_rng().gen::<i32>()`, or cached locally, e.g.\n `let mut rng = thread_rng();`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2133},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":377836,"byte_end":377841,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"OsRng","qualname":"::rngs::os::OsRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that retrieves randomness straight from the\n operating system.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":378028,"byte_end":378031,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<OsRng>::new","value":"fn () -> Result<OsRng, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OsRng`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1023},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/seq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"seq","qualname":"::seq","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/seq.rs","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1030},{"krate":0,"index":1034},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043}],"decl_id":null,"docs":" Functions for randomly accessing and sampling sequences.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11597,"byte_end":11622,"line_start":277,"line_end":277,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":1026},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/seq.rs","byte_start":412733,"byte_end":412744,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::seq::sample_iter","value":"fn <T, I, R> (rng: &mut R, iterable: I, amount: usize) -> Result<Vec<T>, Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample `amount` elements from a finite iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1030},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/seq.rs","byte_start":414121,"byte_end":414133,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"sample_slice","qualname":"::seq::sample_slice","value":"fn <R, T> (rng: &mut R, slice: &[T], amount: usize) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` values from `slice`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1034},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/seq.rs","byte_start":414868,"byte_end":414884,"line_start":114,"line_end":114,"column_start":8,"column_end":24},"name":"sample_slice_ref","qualname":"::seq::sample_slice_ref","value":"fn <'a, R, T> (rng: &mut R, slice: &'a [T], amount: usize) -> Vec<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` references from `slice`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1039},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/seq.rs","byte_start":415552,"byte_end":415566,"line_start":134,"line_end":134,"column_start":8,"column_end":22},"name":"sample_indices","qualname":"::seq::sample_indices","value":"fn <R> (rng: &mut R, length: usize, amount: usize) -> Vec<usize>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` indices from `0..length`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1055},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12843,"byte_end":12849,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"name":"jitter","qualname":"::jitter","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1056}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12799,"byte_end":12819,"line_start":312,"line_end":312,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":1059},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13561,"byte_end":13563,"line_start":335,"line_end":335,"column_start":9,"column_end":11},"name":"os","qualname":"::os","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1060}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12897,"byte_end":12917,"line_start":317,"line_end":317,"column_start":1,"column_end":21}},{"value":"cfg(all\n      (feature = \"std\", any\n       (target_os = \"linux\", target_os = \"android\", target_os = \"netbsd\",\n        target_os = \"dragonfly\", target_os = \"haiku\", target_os =\n        \"emscripten\", target_os = \"solaris\", target_os = \"cloudabi\", target_os\n        = \"macos\", target_os = \"ios\", target_os = \"freebsd\", target_os =\n        \"openbsd\", target_os = \"bitrig\", target_os = \"redox\", target_os =\n        \"fuchsia\", windows, all\n        (target_arch = \"wasm32\", feature = \"stdweb\"))))","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":12918,"byte_end":13537,"line_start":318,"line_end":333,"column_start":1,"column_end":5}}]},{"kind":"Mod","id":{"krate":0,"index":1061},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13637,"byte_end":13643,"line_start":340,"line_end":340,"column_start":9,"column_end":15},"name":"chacha","qualname":"::chacha","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1062}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13593,"byte_end":13613,"line_start":338,"line_end":338,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":1063},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":13744,"byte_end":13749,"line_start":345,"line_end":345,"column_start":9,"column_end":14},"name":"isaac","qualname":"::isaac","value":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1064}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1078},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14476,"byte_end":14480,"line_start":368,"line_end":368,"column_start":11,"column_end":15},"name":"Rand","qualname":"::Rand","value":"Rand: Sized","parent":null,"children":[{"krate":0,"index":1079}],"decl_id":null,"docs":" A type that can be randomly generated using an [`Rng`].\n \n This is merely an adapter around the [`Standard`] distribution for\n convenience and backwards-compatibility.\n \n [`Rng`]: trait.Rng.html\n [`Standard`]: distributions/struct.Standard.html\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"replaced by distributions::Standard\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14393,"byte_end":14465,"line_start":367,"line_end":367,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14597,"byte_end":14601,"line_start":371,"line_end":371,"column_start":8,"column_end":12},"name":"rand","qualname":"::Rand::rand","value":"fn <R> (rng: &mut R) -> Self","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Generates a random instance of this type using the specified source of\n randomness.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1081},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16212,"byte_end":16215,"line_start":413,"line_end":413,"column_start":11,"column_end":14},"name":"Rng","qualname":"::Rng","value":"Rng: RngCore","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" An automatically-implemented extension trait on [`RngCore`] providing high-level\n generic methods for sampling values and other convenience methods.\n \n This is the primary trait to use when generating random values.\n \n # Generic usage\n \n The basic pattern is `fn foo<R: Rng + ?Sized>(rng: &mut R)`. Some\n things are worth noting here:\n \n - Since `Rng: RngCore` and every `RngCore` implements `Rng`, it makes no\n   difference whether we use `R: Rng` or `R: RngCore`.\n - The `+ ?Sized` un-bounding allows functions to be called directly on\n   type-erased references; i.e. `foo(r)` where `r: &mut RngCore`. Without\n   this it would be necessary to write `foo(&mut r)`.\n \n An alternative pattern is possible: `fn foo<R: Rng>(rng: R)`. This has some\n trade-offs. It allows the argument to be consumed directly without a `&mut`\n (which is how `from_rng(thread_rng())` works); also it still works directly\n on references (including type-erased references). Unfortunately within the\n function `foo` it is not known whether `rng` is a reference type or not,\n hence many uses of `rng` require an extra reference, either explicitly\n (`distr.sample(&mut rng)`) or implicitly (`rng.gen()`); one may hope the\n optimiser can remove redundant references later.\n \n Example:\n \n ```\n # use rand::thread_rng;\n use rand::Rng;\n \n fn foo<R: Rng + ?Sized>(rng: &mut R) -> f32 {\n     rng.gen()\n }","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16635,"byte_end":16638,"line_start":429,"line_end":429,"column_start":8,"column_end":11},"name":"gen","qualname":"::Rng::gen","value":"fn <T> (&mut self) -> T","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Return a random value supporting the [`Standard`] distribution.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16618,"byte_end":16627,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":17519,"byte_end":17528,"line_start":457,"line_end":457,"column_start":8,"column_end":17},"name":"gen_range","qualname":"::Rng::gen_range","value":"fn <T> (&mut self, low: T, high: T) -> T","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Generate a random value in the range [`low`, `high`), i.e. inclusive of\n `low` and exclusive of `high`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":18133,"byte_end":18139,"line_start":475,"line_end":475,"column_start":8,"column_end":14},"name":"sample","qualname":"::Rng::sample","value":"fn <T, D> (&mut self, distr: D) -> T","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Sample a new value, using the given distribution.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":19159,"byte_end":19170,"line_start":506,"line_end":506,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::Rng::sample_iter","value":"fn <'a, T, D> (&'a mut self, distr: &'a D) -> distributions::DistIter<'a, D, Self, T>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Create an iterator that generates values using the given distribution.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":20303,"byte_end":20307,"line_start":535,"line_end":535,"column_start":8,"column_end":12},"name":"fill","qualname":"::Rng::fill","value":"fn <T> (&mut self, dest: &mut T) -> ()","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Fill `dest` entirely with random bytes (uniform value distribution),\n where `dest` is any type supporting [`AsByteSliceMut`], namely slices\n and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":21643,"byte_end":21651,"line_start":571,"line_end":571,"column_start":8,"column_end":16},"name":"try_fill","qualname":"::Rng::try_fill","value":"fn <T> (&mut self, dest: &mut T) -> Result<(), Error>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Fill `dest` entirely with random bytes (uniform value distribution),\n where `dest` is any type supporting [`AsByteSliceMut`], namely slices\n and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22324,"byte_end":22332,"line_start":596,"line_end":596,"column_start":8,"column_end":16},"name":"gen_bool","qualname":"::Rng::gen_bool","value":"fn (&mut self, p: f64) -> bool","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Return a bool with a probability `p` of being true.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22307,"byte_end":22316,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":22832,"byte_end":22838,"line_start":615,"line_end":615,"column_start":8,"column_end":14},"name":"choose","qualname":"::Rng::choose","value":"fn <'a, T> (&mut self, values: &'a [T]) -> Option<&'a T>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Return a random element from `values`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23161,"byte_end":23171,"line_start":626,"line_end":626,"column_start":8,"column_end":18},"name":"choose_mut","qualname":"::Rng::choose_mut","value":"fn <'a, T> (&mut self, values: &'a mut [T]) -> Option<&'a mut T>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Return a mutable pointer to a random element from `values`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":23965,"byte_end":23972,"line_start":653,"line_end":653,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::Rng::shuffle","value":"fn <T> (&mut self, values: &mut [T]) -> ()","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Shuffle a mutable slice in place.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24879,"byte_end":24887,"line_start":680,"line_end":680,"column_start":8,"column_end":16},"name":"gen_iter","qualname":"::Rng::gen_iter","value":"fn <T> (&mut self) -> Generator<T, &mut Self>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Return an iterator that will yield an infinite number of randomly\n generated items.","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24770,"byte_end":24790,"line_start":678,"line_end":678,"column_start":5,"column_end":25}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use Rng::sample_iter(&Standard) instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":24795,"byte_end":24871,"line_start":679,"line_end":679,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25702,"byte_end":25719,"line_start":702,"line_end":702,"column_start":8,"column_end":25},"name":"gen_weighted_bool","qualname":"::Rng::gen_weighted_bool","value":"fn (&mut self, n: u32) -> bool","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Return a bool with a 1 in n chance of true","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"use gen_bool instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":25637,"byte_end":25694,"line_start":701,"line_end":701,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26293,"byte_end":26308,"line_start":720,"line_end":720,"column_start":8,"column_end":23},"name":"gen_ascii_chars","qualname":"::Rng::gen_ascii_chars","value":"fn (&mut self) -> AsciiGenerator<&mut Self>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Return an iterator of random characters from the set A-Z,a-z,0-9.","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26185,"byte_end":26205,"line_start":718,"line_end":718,"column_start":5,"column_end":25}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use sample_iter(&Alphanumeric) instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26210,"byte_end":26285,"line_start":719,"line_end":719,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":1112},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26649,"byte_end":26663,"line_start":733,"line_end":733,"column_start":11,"column_end":25},"name":"AsByteSliceMut","qualname":"::AsByteSliceMut","value":"AsByteSliceMut","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114}],"decl_id":null,"docs":" Trait for casting types to byte slices\n \n This is used by the [`fill`] and [`try_fill`] methods.\n \n [`fill`]: trait.Rng.html#method.fill\n [`try_fill`]: trait.Rng.html#method.try_fill\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26732,"byte_end":26749,"line_start":735,"line_end":735,"column_start":8,"column_end":25},"name":"as_byte_slice_mut","qualname":"::AsByteSliceMut::as_byte_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":1112},"children":[],"decl_id":null,"docs":" Return a mutable reference to self as a byte slice\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26866,"byte_end":26871,"line_start":738,"line_end":738,"column_start":8,"column_end":13},"name":"to_le","qualname":"::AsByteSliceMut::to_le","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":1112},"children":[],"decl_id":null,"docs":" Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2381},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29622,"byte_end":29631,"line_start":832,"line_end":832,"column_start":12,"column_end":21},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2385}],"decl_id":null,"docs":" Iterator which will generate a stream of random items.","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29524,"byte_end":29544,"line_start":830,"line_end":830,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note = \"use Rng::sample_iter instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29545,"byte_end":29610,"line_start":831,"line_end":831,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2390},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30281,"byte_end":30295,"line_start":855,"line_end":855,"column_start":12,"column_end":26},"name":"AsciiGenerator","qualname":"::AsciiGenerator","value":"AsciiGenerator {  }","parent":null,"children":[{"krate":0,"index":2392}],"decl_id":null,"docs":" Iterator which will continuously generate random ascii characters.","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30172,"byte_end":30192,"line_start":853,"line_end":853,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use distributions::Alphanumeric instead\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30193,"byte_end":30269,"line_start":854,"line_end":854,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1130},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":31852,"byte_end":31863,"line_start":902,"line_end":902,"column_start":11,"column_end":22},"name":"FromEntropy","qualname":"::FromEntropy","value":"FromEntropy: SeedableRng","parent":null,"children":[{"krate":0,"index":1131}],"decl_id":null,"docs":" A convenience extension to [`SeedableRng`] allowing construction from fresh\n entropy. This trait is automatically implemented for any PRNG implementing\n [`SeedableRng`] and is not intended to be implemented by users.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":31820,"byte_end":31841,"line_start":901,"line_end":901,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":33010,"byte_end":33022,"line_start":932,"line_end":932,"column_start":8,"column_end":20},"name":"from_entropy","qualname":"::FromEntropy::from_entropy","value":"fn () -> Self","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Creates a new instance, automatically seeded with fresh entropy.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1136},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":33873,"byte_end":33881,"line_start":958,"line_end":958,"column_start":8,"column_end":16},"name":"weak_rng","qualname":"::weak_rng","value":"fn () -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED: use [`SmallRng`] instead.","sig":null,"attributes":[{"value":"deprecated(since = \"0.5.0\", note = \"removed in favor of SmallRng\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":33778,"byte_end":33843,"line_start":956,"line_end":956,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":33844,"byte_end":33865,"line_start":957,"line_end":957,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":1138},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":35144,"byte_end":35150,"line_start":1009,"line_end":1009,"column_start":8,"column_end":14},"name":"random","qualname":"::random","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Generates a random value using the thread-local random number generator.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":35105,"byte_end":35126,"line_start":1007,"line_end":1007,"column_start":1,"column_end":22}},{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":35127,"byte_end":35136,"line_start":1008,"line_end":1008,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1140},"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":35714,"byte_end":35720,"line_start":1031,"line_end":1031,"column_start":8,"column_end":14},"name":"sample","qualname":"::sample","value":"fn <T, I, R> (rng: &mut R, iterable: I, amount: usize) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED: use `seq::sample_iter` instead.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":35610,"byte_end":35631,"line_start":1028,"line_end":1028,"column_start":1,"column_end":22}},{"value":"inline","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":35632,"byte_end":35641,"line_start":1029,"line_end":1029,"column_start":1,"column_end":10}},{"value":"deprecated(since = \"0.4.0\", note = \"renamed to seq::sample_iter\")","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":35642,"byte_end":35706,"line_start":1030,"line_end":1030,"column_start":1,"column_end":65}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76485,"byte_end":76492,"line_start":155,"line_end":155,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77082,"byte_end":77089,"line_start":169,"line_end":169,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79757,"byte_end":79764,"line_start":240,"line_end":240,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":94193,"byte_end":94201,"line_start":618,"line_end":618,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":94291,"byte_end":94306,"line_start":623,"line_end":623,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":104401,"byte_end":104406,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":105042,"byte_end":105057,"line_start":114,"line_end":114,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":105275,"byte_end":105290,"line_start":123,"line_end":123,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":105528,"byte_end":105533,"line_start":134,"line_end":134,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":105794,"byte_end":105809,"line_start":143,"line_end":143,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":106011,"byte_end":106026,"line_start":150,"line_end":150,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":107550,"byte_end":107560,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":107977,"byte_end":107987,"line_start":215,"line_end":215,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":108979,"byte_end":108986,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":109453,"byte_end":109460,"line_start":266,"line_end":266,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":110010,"byte_end":110018,"line_start":290,"line_end":290,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":110343,"byte_end":110351,"line_start":301,"line_end":301,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":113134,"byte_end":113148,"line_start":40,"line_end":40,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":114798,"byte_end":114804,"line_start":96,"line_end":96,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":115211,"byte_end":115217,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":115898,"byte_end":115907,"line_start":140,"line_end":140,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":116313,"byte_end":116322,"line_start":153,"line_end":153,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":118734,"byte_end":118738,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":119743,"byte_end":119746,"line_start":82,"line_end":82,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":120054,"byte_end":120057,"line_start":92,"line_end":92,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/pareto.rs","byte_start":121615,"byte_end":121621,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/pareto.rs","byte_start":122111,"byte_end":122117,"line_start":47,"line_end":47,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/poisson.rs","byte_start":123915,"byte_end":123922,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/poisson.rs","byte_start":124451,"byte_end":124458,"line_start":57,"line_end":57,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/binomial.rs","byte_start":129089,"byte_end":129097,"line_start":39,"line_end":39,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/binomial.rs","byte_start":129509,"byte_end":129517,"line_start":51,"line_end":51,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":135116,"byte_end":135125,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":136347,"byte_end":136356,"line_start":72,"line_end":72,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/cauchy.rs","byte_start":138719,"byte_end":138725,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/cauchy.rs","byte_start":139118,"byte_end":139124,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":149411,"byte_end":149419,"line_start":16,"line_end":16,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":149560,"byte_end":149568,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":149711,"byte_end":149719,"line_start":30,"line_end":30,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":149855,"byte_end":149863,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":150328,"byte_end":150336,"line_start":55,"line_end":55,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":155060,"byte_end":155068,"line_start":44,"line_end":44,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":155513,"byte_end":155525,"line_start":59,"line_end":59,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":156315,"byte_end":156323,"line_start":79,"line_end":79,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":157504,"byte_end":157512,"line_start":114,"line_end":114,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":158747,"byte_end":158755,"line_start":153,"line_end":153,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":159099,"byte_end":159107,"line_start":165,"line_end":165,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51325,"byte_end":51339,"line_start":259,"line_end":259,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51514,"byte_end":51528,"line_start":264,"line_end":264,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51699,"byte_end":51704,"line_start":270,"line_end":270,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51877,"byte_end":51882,"line_start":275,"line_end":275,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55276,"byte_end":55284,"line_start":376,"line_end":376,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58389,"byte_end":58390,"line_start":453,"line_end":453,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59826,"byte_end":59840,"line_start":499,"line_end":499,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":61238,"byte_end":61252,"line_start":536,"line_end":536,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":205873,"byte_end":205882,"line_start":73,"line_end":73,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":206305,"byte_end":206314,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":206630,"byte_end":206639,"line_start":107,"line_end":107,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":206649,"byte_end":206658,"line_start":109,"line_end":109,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":210795,"byte_end":210805,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":211856,"byte_end":211866,"line_start":245,"line_end":245,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":212736,"byte_end":212746,"line_start":274,"line_end":274,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":213256,"byte_end":213266,"line_start":289,"line_end":289,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":213297,"byte_end":213306,"line_start":291,"line_end":291,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":223906,"byte_end":223914,"line_start":74,"line_end":74,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":224325,"byte_end":224333,"line_start":94,"line_end":94,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":224644,"byte_end":224652,"line_start":106,"line_end":106,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":224885,"byte_end":224894,"line_start":116,"line_end":116,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":225023,"byte_end":225032,"line_start":122,"line_end":122,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":227849,"byte_end":227858,"line_start":174,"line_end":174,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":234559,"byte_end":234568,"line_start":322,"line_end":322,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":235024,"byte_end":235033,"line_start":335,"line_end":335,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":244335,"byte_end":244343,"line_start":97,"line_end":97,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":244754,"byte_end":244762,"line_start":117,"line_end":117,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":245391,"byte_end":245399,"line_start":136,"line_end":136,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":246502,"byte_end":246511,"line_start":167,"line_end":167,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":246640,"byte_end":246649,"line_start":173,"line_end":173,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":249869,"byte_end":249878,"line_start":251,"line_end":251,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":253288,"byte_end":253297,"line_start":324,"line_end":324,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":263065,"byte_end":263075,"line_start":87,"line_end":87,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":263486,"byte_end":263496,"line_start":107,"line_end":107,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":264141,"byte_end":264151,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":265269,"byte_end":265280,"line_start":157,"line_end":157,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":265411,"byte_end":265422,"line_start":163,"line_end":163,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":268666,"byte_end":268677,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":270991,"byte_end":271002,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":280081,"byte_end":280092,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":280206,"byte_end":280217,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":280855,"byte_end":280866,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":281497,"byte_end":281508,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287452,"byte_end":287462,"line_start":34,"line_end":34,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287594,"byte_end":287604,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287739,"byte_end":287749,"line_start":48,"line_end":48,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287913,"byte_end":287923,"line_start":56,"line_end":56,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":288074,"byte_end":288084,"line_start":63,"line_end":63,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/read.rs","byte_start":301593,"byte_end":301600,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/read.rs","byte_start":301774,"byte_end":301781,"line_start":60,"line_end":60,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":307199,"byte_end":307211,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":308033,"byte_end":308045,"line_start":85,"line_end":85,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":308579,"byte_end":308591,"line_start":108,"line_end":108,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":308915,"byte_end":308927,"line_start":119,"line_end":119,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":309188,"byte_end":309201,"line_start":131,"line_end":131,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":309926,"byte_end":309939,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":311786,"byte_end":311799,"line_start":205,"line_end":205,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":312190,"byte_end":312203,"line_start":219,"line_end":219,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":315916,"byte_end":315926,"line_start":61,"line_end":61,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":316285,"byte_end":316295,"line_start":72,"line_end":72,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":316377,"byte_end":316387,"line_start":78,"line_end":78,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":319504,"byte_end":319514,"line_start":165,"line_end":165,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":319835,"byte_end":319843,"line_start":183,"line_end":183,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":321440,"byte_end":321442,"line_start":231,"line_end":231,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":322605,"byte_end":322611,"line_start":270,"line_end":270,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":330774,"byte_end":330781,"line_start":178,"line_end":178,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":331577,"byte_end":331586,"line_start":200,"line_end":200,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":331708,"byte_end":331717,"line_start":206,"line_end":206,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332686,"byte_end":332696,"line_start":239,"line_end":239,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":333184,"byte_end":333194,"line_start":252,"line_end":252,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":333360,"byte_end":333370,"line_start":259,"line_end":259,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":333471,"byte_end":333476,"line_start":265,"line_end":265,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":333964,"byte_end":333973,"line_start":278,"line_end":278,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":356763,"byte_end":356772,"line_start":825,"line_end":825,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":357736,"byte_end":357745,"line_start":857,"line_end":857,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":359777,"byte_end":359784,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":360047,"byte_end":360054,"line_start":43,"line_end":43,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":363171,"byte_end":363179,"line_start":71,"line_end":71,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":363591,"byte_end":363599,"line_start":91,"line_end":91,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":365251,"byte_end":365257,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":365669,"byte_end":365675,"line_start":53,"line_end":53,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":365955,"byte_end":365961,"line_start":65,"line_end":65,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/thread.rs","byte_start":370984,"byte_end":370993,"line_start":104,"line_end":104,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/thread.rs","byte_start":371490,"byte_end":371499,"line_start":124,"line_end":124,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":377876,"byte_end":377881,"line_start":120,"line_end":120,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":377979,"byte_end":377984,"line_start":126,"line_end":126,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":378125,"byte_end":378130,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":378152,"byte_end":378157,"line_start":135,"line_end":135,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":385402,"byte_end":385407,"line_start":344,"line_end":344,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26431,"byte_end":26432,"line_start":725,"line_end":725,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29763,"byte_end":29772,"line_start":838,"line_end":838,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30376,"byte_end":30390,"line_start":860,"line_end":860,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":33096,"byte_end":33097,"line_start":936,"line_end":936,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11537,"byte_end":11550,"line_start":273,"line_end":273,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49251,"byte_end":49258,"line_start":192,"line_end":192,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49305,"byte_end":49310,"line_start":194,"line_end":194,"column_start":24,"column_end":29},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49357,"byte_end":49363,"line_start":196,"line_end":196,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":126}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49410,"byte_end":49421,"line_start":198,"line_end":198,"column_start":24,"column_end":35},"ref_id":{"krate":0,"index":149}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49468,"byte_end":49474,"line_start":200,"line_end":200,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49523,"byte_end":49530,"line_start":202,"line_end":202,"column_start":24,"column_end":31},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49579,"byte_end":49587,"line_start":204,"line_end":204,"column_start":24,"column_end":32},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49612,"byte_end":49621,"line_start":205,"line_end":205,"column_start":24,"column_end":33},"ref_id":{"krate":0,"index":200}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":49670,"byte_end":49676,"line_start":207,"line_end":207,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":209}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11560,"byte_end":11567,"line_start":274,"line_end":274,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":387}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11577,"byte_end":11581,"line_start":275,"line_end":275,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":402}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202501,"byte_end":202507,"line_start":318,"line_end":318,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":403}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202517,"byte_end":202522,"line_start":319,"line_end":319,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":451}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202532,"byte_end":202537,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/mod.rs","byte_start":202547,"byte_end":202554,"line_start":321,"line_end":321,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":558}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11591,"byte_end":11595,"line_start":276,"line_end":276,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":678}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":297518,"byte_end":297525,"line_start":166,"line_end":166,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":679}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/mod.rs","byte_start":299847,"byte_end":299851,"line_start":13,"line_end":13,"column_start":46,"column_end":50},"ref_id":{"krate":0,"index":680}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":297586,"byte_end":297592,"line_start":169,"line_end":169,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":784}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mod.rs","byte_start":297602,"byte_end":297606,"line_start":170,"line_end":170,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":862}},{"kind":"Mod","span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":11631,"byte_end":11634,"line_start":277,"line_end":277,"column_start":35,"column_end":38},"ref_id":{"krate":0,"index":1023}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":76485,"byte_end":76492,"line_start":155,"line_end":155,"column_start":24,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77082,"byte_end":77089,"line_start":169,"line_end":169,"column_start":44,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":77577,"byte_end":77582,"line_start":184,"line_end":184,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":78192,"byte_end":78197,"line_start":200,"line_end":200,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":79757,"byte_end":79764,"line_start":240,"line_end":240,"column_start":56,"column_end":63},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":94193,"byte_end":94201,"line_start":618,"line_end":618,"column_start":24,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":31405},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/uniform.rs","byte_start":94291,"byte_end":94306,"line_start":623,"line_end":623,"column_start":25,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1317},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":104401,"byte_end":104406,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":105042,"byte_end":105057,"line_start":114,"line_end":114,"column_start":6,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":105275,"byte_end":105290,"line_start":123,"line_end":123,"column_start":6,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":105528,"byte_end":105533,"line_start":134,"line_end":134,"column_start":28,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1336},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":105794,"byte_end":105809,"line_start":143,"line_end":143,"column_start":28,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1358},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":106011,"byte_end":106026,"line_start":150,"line_end":150,"column_start":28,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1366},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":107550,"byte_end":107560,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":107977,"byte_end":107987,"line_start":215,"line_end":215,"column_start":28,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1375},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":108979,"byte_end":108986,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":109453,"byte_end":109460,"line_start":266,"line_end":266,"column_start":28,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":110010,"byte_end":110018,"line_start":290,"line_end":290,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/gamma.rs","byte_start":110343,"byte_end":110351,"line_start":301,"line_end":301,"column_start":28,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1402},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":113134,"byte_end":113148,"line_start":40,"line_end":40,"column_start":28,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":114798,"byte_end":114804,"line_start":96,"line_end":96,"column_start":6,"column_end":12},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":115211,"byte_end":115217,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1417},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":115898,"byte_end":115907,"line_start":140,"line_end":140,"column_start":6,"column_end":15},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/normal.rs","byte_start":116313,"byte_end":116322,"line_start":153,"line_end":153,"column_start":28,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1425},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":118734,"byte_end":118738,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1432},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":119743,"byte_end":119746,"line_start":82,"line_end":82,"column_start":6,"column_end":9},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/exponential.rs","byte_start":120054,"byte_end":120057,"line_start":92,"line_end":92,"column_start":28,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/pareto.rs","byte_start":121615,"byte_end":121621,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/pareto.rs","byte_start":122111,"byte_end":122117,"line_start":47,"line_end":47,"column_start":28,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1446},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/poisson.rs","byte_start":123915,"byte_end":123922,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/poisson.rs","byte_start":124451,"byte_end":124458,"line_start":57,"line_end":57,"column_start":28,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1454},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/binomial.rs","byte_start":129089,"byte_end":129097,"line_start":39,"line_end":39,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/binomial.rs","byte_start":129509,"byte_end":129517,"line_start":51,"line_end":51,"column_start":28,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1465},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":135116,"byte_end":135125,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/bernoulli.rs","byte_start":136347,"byte_end":136356,"line_start":72,"line_end":72,"column_start":29,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1473},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/cauchy.rs","byte_start":138719,"byte_end":138725,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/cauchy.rs","byte_start":139118,"byte_end":139124,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1480},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":149411,"byte_end":149419,"line_start":16,"line_end":16,"column_start":27,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":149560,"byte_end":149568,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":149711,"byte_end":149719,"line_start":30,"line_end":30,"column_start":28,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":149855,"byte_end":149863,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/integer.rs","byte_start":150328,"byte_end":150336,"line_start":55,"line_end":55,"column_start":30,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":155060,"byte_end":155068,"line_start":44,"line_end":44,"column_start":29,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":155513,"byte_end":155525,"line_start":59,"line_end":59,"column_start":29,"column_end":41},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1543},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":156315,"byte_end":156323,"line_start":79,"line_end":79,"column_start":29,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":157504,"byte_end":157512,"line_start":114,"line_end":114,"column_start":27,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":158747,"byte_end":158755,"line_start":153,"line_end":153,"column_start":37,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/other.rs","byte_start":159099,"byte_end":159107,"line_start":165,"line_end":165,"column_start":39,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1915},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":50493,"byte_end":50499,"line_start":234,"line_end":234,"column_start":39,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":300},"to":{"krate":0,"index":304}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51325,"byte_end":51339,"line_start":259,"line_end":259,"column_start":38,"column_end":52},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1934},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51514,"byte_end":51528,"line_start":264,"line_end":264,"column_start":49,"column_end":63},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1934},"to":{"krate":0,"index":304}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51699,"byte_end":51704,"line_start":270,"line_end":270,"column_start":40,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":51877,"byte_end":51882,"line_start":275,"line_end":275,"column_start":51,"column_end":56},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":304}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":55276,"byte_end":55284,"line_start":376,"line_end":376,"column_start":32,"column_end":40},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1901},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":58389,"byte_end":58390,"line_start":453,"line_end":453,"column_start":20,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":371},"to":{"krate":0,"index":1078}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":59826,"byte_end":59840,"line_start":499,"line_end":499,"column_start":20,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/distributions/mod.rs","byte_start":61238,"byte_end":61252,"line_start":536,"line_end":536,"column_start":40,"column_end":54},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1934},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":205873,"byte_end":205882,"line_start":73,"line_end":73,"column_start":18,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1943},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":206305,"byte_end":206314,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1943},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":206630,"byte_end":206639,"line_start":107,"line_end":107,"column_start":20,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1943},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":206649,"byte_end":206658,"line_start":109,"line_end":109,"column_start":6,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":210795,"byte_end":210805,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":211856,"byte_end":211866,"line_start":245,"line_end":245,"column_start":23,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1950},"to":{"krate":16,"index":45}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":212736,"byte_end":212746,"line_start":274,"line_end":274,"column_start":22,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1950},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":213256,"byte_end":213266,"line_start":289,"line_end":289,"column_start":20,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1950},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/chacha.rs","byte_start":213297,"byte_end":213306,"line_start":291,"line_end":291,"column_start":27,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":223906,"byte_end":223914,"line_start":74,"line_end":74,"column_start":18,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1955},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":224325,"byte_end":224333,"line_start":94,"line_end":94,"column_start":22,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1955},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":224644,"byte_end":224652,"line_start":106,"line_end":106,"column_start":20,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1955},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":224885,"byte_end":224894,"line_start":116,"line_end":116,"column_start":21,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1962},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":225023,"byte_end":225032,"line_start":122,"line_end":122,"column_start":23,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1962},"to":{"krate":16,"index":45}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":227849,"byte_end":227858,"line_start":174,"line_end":174,"column_start":6,"column_end":15},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":234559,"byte_end":234568,"line_start":322,"line_end":322,"column_start":22,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1962},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/hc128.rs","byte_start":235024,"byte_end":235033,"line_start":335,"line_end":335,"column_start":20,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1962},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":244335,"byte_end":244343,"line_start":97,"line_end":97,"column_start":18,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1968},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":244754,"byte_end":244762,"line_start":117,"line_end":117,"column_start":22,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1968},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":245391,"byte_end":245399,"line_start":136,"line_end":136,"column_start":6,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":246502,"byte_end":246511,"line_start":167,"line_end":167,"column_start":21,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1975},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":246640,"byte_end":246649,"line_start":173,"line_end":173,"column_start":23,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1975},"to":{"krate":16,"index":45}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":249869,"byte_end":249878,"line_start":251,"line_end":251,"column_start":6,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac.rs","byte_start":253288,"byte_end":253297,"line_start":324,"line_end":324,"column_start":22,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1975},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":263065,"byte_end":263075,"line_start":87,"line_end":87,"column_start":18,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1983},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":263486,"byte_end":263496,"line_start":107,"line_end":107,"column_start":22,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1983},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":264141,"byte_end":264151,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":265269,"byte_end":265280,"line_start":157,"line_end":157,"column_start":21,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1990},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":265411,"byte_end":265422,"line_start":163,"line_end":163,"column_start":23,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1990},"to":{"krate":16,"index":45}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":268666,"byte_end":268677,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac64.rs","byte_start":270991,"byte_end":271002,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1990},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":280081,"byte_end":280092,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1998},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":280206,"byte_end":280217,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":280855,"byte_end":280866,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1998},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/xorshift.rs","byte_start":281497,"byte_end":281508,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1998},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287452,"byte_end":287462,"line_start":34,"line_end":34,"column_start":41,"column_end":51},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":2249}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287594,"byte_end":287604,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":2252}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287739,"byte_end":287749,"line_start":48,"line_end":48,"column_start":32,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":287913,"byte_end":287923,"line_start":56,"line_end":56,"column_start":35,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":1715}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/prng/isaac_array.rs","byte_start":288074,"byte_end":288084,"line_start":63,"line_end":63,"column_start":38,"column_end":48},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/read.rs","byte_start":301593,"byte_end":301600,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/read.rs","byte_start":301774,"byte_end":301781,"line_start":60,"line_end":60,"column_start":27,"column_end":34},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2014},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":307199,"byte_end":307211,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":308033,"byte_end":308045,"line_start":85,"line_end":85,"column_start":36,"column_end":48},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2020},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":308579,"byte_end":308591,"line_start":108,"line_end":108,"column_start":25,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2020},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":308915,"byte_end":308927,"line_start":119,"line_end":119,"column_start":29,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2020},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":309188,"byte_end":309201,"line_start":131,"line_end":131,"column_start":32,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2029},"to":{"krate":16,"index":45}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":309926,"byte_end":309939,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":311786,"byte_end":311799,"line_start":205,"line_end":205,"column_start":25,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2029},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/adapter/reseeding.rs","byte_start":312190,"byte_end":312203,"line_start":219,"line_end":219,"column_start":29,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2029},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":315916,"byte_end":315926,"line_start":61,"line_end":61,"column_start":6,"column_end":16},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":316285,"byte_end":316295,"line_start":72,"line_end":72,"column_start":18,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2040},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":316377,"byte_end":316387,"line_start":78,"line_end":78,"column_start":18,"column_end":28},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2040},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":319504,"byte_end":319514,"line_start":165,"line_end":165,"column_start":20,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2040},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":319835,"byte_end":319843,"line_start":183,"line_end":183,"column_start":24,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2058},"to":{"krate":0,"index":769}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":321440,"byte_end":321442,"line_start":231,"line_end":231,"column_start":24,"column_end":26},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2064},"to":{"krate":0,"index":769}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/entropy.rs","byte_start":322605,"byte_end":322611,"line_start":270,"line_end":270,"column_start":24,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2071},"to":{"krate":0,"index":769}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":330774,"byte_end":330781,"line_start":178,"line_end":178,"column_start":6,"column_end":13},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":331577,"byte_end":331586,"line_start":200,"line_end":200,"column_start":21,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":331708,"byte_end":331717,"line_start":206,"line_end":206,"column_start":16,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":332686,"byte_end":332696,"line_start":239,"line_end":239,"column_start":6,"column_end":16},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":333184,"byte_end":333194,"line_start":252,"line_end":252,"column_start":23,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":333360,"byte_end":333370,"line_start":259,"line_end":259,"column_start":30,"column_end":40},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2078},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":333471,"byte_end":333476,"line_start":265,"line_end":265,"column_start":27,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":16,"index":179},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":333964,"byte_end":333973,"line_start":278,"line_end":278,"column_start":6,"column_end":15},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":356763,"byte_end":356772,"line_start":825,"line_end":825,"column_start":18,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":802},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/jitter.rs","byte_start":357736,"byte_end":357745,"line_start":857,"line_end":857,"column_start":20,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":802},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":359777,"byte_end":359784,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/mock.rs","byte_start":360047,"byte_end":360054,"line_start":43,"line_end":43,"column_start":18,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2101},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":363171,"byte_end":363179,"line_start":71,"line_end":71,"column_start":18,"column_end":26},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2108},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/small.rs","byte_start":363591,"byte_end":363599,"line_start":91,"line_end":91,"column_start":22,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2108},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":365251,"byte_end":365257,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2115},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":365669,"byte_end":365675,"line_start":53,"line_end":53,"column_start":22,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2115},"to":{"krate":16,"index":129}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/std.rs","byte_start":365955,"byte_end":365961,"line_start":65,"line_end":65,"column_start":20,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2115},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/thread.rs","byte_start":370984,"byte_end":370993,"line_start":104,"line_end":104,"column_start":18,"column_end":27},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2122},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/thread.rs","byte_start":371490,"byte_end":371499,"line_start":124,"line_end":124,"column_start":20,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2122},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":377876,"byte_end":377881,"line_start":120,"line_end":120,"column_start":21,"column_end":26},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2133},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":377979,"byte_end":377984,"line_start":126,"line_end":126,"column_start":6,"column_end":11},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":378125,"byte_end":378130,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2133},"to":{"krate":16,"index":128}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":378152,"byte_end":378157,"line_start":135,"line_end":135,"column_start":18,"column_end":23},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2133},"to":{"krate":16,"index":123}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/rngs/os.rs","byte_start":385402,"byte_end":385407,"line_start":344,"line_end":344,"column_start":24,"column_end":29},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2138},"to":{"krate":0,"index":959}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":14483,"byte_end":14488,"line_start":368,"line_end":368,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1078}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":16217,"byte_end":16224,"line_start":413,"line_end":413,"column_start":16,"column_end":23},"kind":"SuperTrait","from":{"krate":16,"index":123},"to":{"krate":0,"index":1081}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":26431,"byte_end":26432,"line_start":725,"line_end":725,"column_start":35,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1111},"to":{"krate":0,"index":1081}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":29763,"byte_end":29772,"line_start":838,"line_end":838,"column_start":34,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2381},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":30376,"byte_end":30390,"line_start":860,"line_end":860,"column_start":31,"column_end":45},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2390},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":31865,"byte_end":31876,"line_start":902,"line_end":902,"column_start":24,"column_end":35},"kind":"SuperTrait","from":{"krate":16,"index":129},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/home/daryl/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.6/src/lib.rs","byte_start":33096,"byte_end":33097,"line_start":936,"line_end":936,"column_start":38,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1133},"to":{"krate":0,"index":1130}}]}